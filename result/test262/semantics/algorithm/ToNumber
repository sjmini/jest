[33mToNumber[0m
[33m- Inst: 31 / 33 (93.94%)[0m
[33m- Cond: 20 / 22 (90.91%)[0m
[32m+ 23136 [-]   : { ... }[0m
[32m+ 23137 [-]   : app atype = (Type argument)[0m
[32m+ 23138 [[32mT[0m/[32mT[0m[32m]: if (= atype "Undefined") ... else ...[0m
[32m+ 23139 [-]   : return NaN[0m
[32m+ 23140 [[32mT[0m/[32mT[0m[32m]: if (= atype "Null") ... else ...[0m
[32m+ 23141 [-]   : return 0.0[0m
[32m+ 23142 [[32mT[0m/[32mT[0m[32m]: if (= atype "Boolean") ... else ...[0m
[32m+ 23143 [[32mT[0m/[32mT[0m[32m]: if argument ... else ...[0m
[32m+ 23144 [-]   : return 1.0[0m
[32m+ 23145 [-]   : return 0.0[0m
[32m+ 23146 [[32mT[0m/[32mT[0m[32m]: if (= atype "Number") ... else ...[0m
[32m+ 23147 [-]   : return argument[0m
[32m+ 23148 [[32mT[0m/[32mT[0m[32m]: if (= atype "String") ... else ...[0m
[32m+ 23149 [-]   : return (convert argument str2num )[0m
[32m+ 23150 [[32mT[0m/[32mT[0m[32m]: if (|| (= atype "Symbol") (= atype "BigInt")) ... else ...[0m
[32m+ 23151 [-]   : return (new Completion("Type" -> CONST_throw, "Value" -> (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))), "Target" -> CONST_empty))[0m
[32m+ 23152 [-]   : { ... }[0m
[32m+ 23153 [-]   : app __x0__ = (ToPrimitive argument "Number")[0m
[32m+ 23154 [[32mT[0m/[31mF[0m[32m]: if (is-completion __x0__) ... else ...[0m
[32m+ 23155 [-]   : { ... }[0m
[32m+ 23156 [[32mT[0m/[32mT[0m[32m]: if (= __x0__["Type"] CONST_normal) ... else ...[0m
[32m+ 23157 [-]   : __x0__ = __x0__["Value"][0m
[32m+ 23158 [-]   : return __x0__[0m
[31m- 23159 [-]   : {}[0m
[32m+ 23160 [-]   : let primValue = __x0__[0m
[32m+ 23161 [-]   : app __x1__ = (ToNumber primValue)[0m
[32m+ 23162 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 23163 [-]   : { ... }[0m
[32m+ 23164 [[31mF[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[31m- 23165 [-]   : __x1__ = __x1__["Value"][0m
[32m+ 23166 [-]   : return __x1__[0m
[32m+ 23167 [-]   : {}[0m
[32m+ 23168 [-]   : return __x1__[0m

[32mToBigInt[0m
[32m- Inst: 35 / 35 (100.00%)[0m
[33m- Cond: 19 / 20 (95.00%)[0m
[32m+ 22972 [-]   : { ... }[0m
[32m+ 22973 [-]   : app prim = (ToPrimitive argument Number)[0m
[32m+ 22974 [[32mT[0m/[32mT[0m[32m]: if (is-completion prim) ... else ...[0m
[32m+ 22975 [[32mT[0m/[32mT[0m[32m]: if (= prim["Type"] CONST_normal) ... else ...[0m
[32m+ 22976 [-]   : prim = prim["Value"][0m
[32m+ 22977 [-]   : return prim[0m
[32m+ 22978 [-]   : {}[0m
[32m+ 22979 [-]   : app atype = (Type prim)[0m
[32m+ 22980 [-]   : let typeError = (new Completion("Type" -> CONST_throw, "Value" -> (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))), "Target" -> CONST_empty))[0m
[32m+ 22981 [[32mT[0m/[32mT[0m[32m]: if (= atype "Undefined") ... else ...[0m
[32m+ 22982 [-]   : return typeError[0m
[32m+ 22983 [-]   : if[0m
[32m+ 22984 [-]   : (= atype "Null")[0m
[32m+ 22985 [-]   : reutrn[0m
[32m+ 22986 [-]   : typeError[0m
[32m+ 22987 [-]   : else[0m
[32m+ 22988 [[32mT[0m/[32mT[0m[32m]: if (= atype "Boolean") ... else ...[0m
[32m+ 22989 [[32mT[0m/[32mT[0m[32m]: if prim ... else ...[0m
[32m+ 22990 [-]   : return 1n[0m
[32m+ 22991 [-]   : return 0n[0m
[32m+ 22992 [[32mT[0m/[32mT[0m[32m]: if (= atype "BigInt") ... else ...[0m
[32m+ 22993 [-]   : return prim[0m
[32m+ 22994 [[32mT[0m/[32mT[0m[32m]: if (= atype "Number") ... else ...[0m
[32m+ 22995 [-]   : return typeError[0m
[32m+ 22996 [[32mT[0m/[32mT[0m[32m]: if (= atype "String") ... else ...[0m
[32m+ 22997 [-]   : { ... }[0m
[32m+ 22998 [-]   : app n = (StringToBigInt prim)[0m
[32m+ 22999 [[31mF[0m/[32mT[0m[32m]: if (is-completion n) ... else ...[0m
[32m+ 23000 [-]   : n = n["Value"][0m
[32m+ 23001 [-]   : {}[0m
[32m+ 23002 [[32mT[0m/[32mT[0m[32m]: if (= n NaN) ... else ...[0m
[32m+ 23003 [-]   : return (new Completion("Type" -> CONST_throw, "Value" -> (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))), "Target" -> CONST_empty))[0m
[32m+ 23004 [-]   : {}[0m
[32m+ 23005 [-]   : return n[0m
[32m+ 23006 [-]   : return typeError[0m

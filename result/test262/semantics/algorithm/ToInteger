[33mToInteger[0m
[33m- Inst: 23 / 26 (88.46%)[0m
[33m- Cond: 9 / 10 (90.00%)[0m
[32m+ 23094 [-]   : { ... }[0m
[32m+ 23095 [-]   : app __x0__ = (ToNumber argument)[0m
[32m+ 23096 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x0__) ... else ...[0m
[32m+ 23097 [[32mT[0m/[32mT[0m[32m]: if (= __x0__["Type"] CONST_normal) ... else ...[0m
[32m+ 23098 [-]   : __x0__ = __x0__["Value"][0m
[32m+ 23099 [-]   : return __x0__[0m
[32m+ 23100 [-]   : {}[0m
[32m+ 23101 [-]   : let number = __x0__[0m
[32m+ 23102 [[32mT[0m/[32mT[0m[32m]: if (|| (|| (= number NaN) (= number 0i)) (= number -0.0)) ... else ...[0m
[32m+ 23103 [-]   : { ... }[0m
[32m+ 23104 [-]   : app __x1__ = (WrapCompletion 0i)[0m
[32m+ 23105 [-]   : return __x1__[0m
[32m+ 23106 [-]   : {}[0m
[32m+ 23107 [[32mT[0m/[32mT[0m[32m]: if (|| (= number Infinity) (= number -Infinity)) ... else ...[0m
[32m+ 23108 [-]   : { ... }[0m
[32m+ 23109 [-]   : app __x2__ = (WrapCompletion number)[0m
[32m+ 23110 [-]   : return __x2__[0m
[32m+ 23111 [-]   : {}[0m
[32m+ 23112 [-]   : let integer = (convert number num2int )[0m
[32m+ 23113 [[31mF[0m/[32mT[0m[32m]: if (= integer -0.0) ... else ...[0m
[31m- 23114 [-]   : { ... }[0m
[31m- 23115 [-]   : app __x3__ = (WrapCompletion 0i)[0m
[31m- 23116 [-]   : return __x3__[0m
[32m+ 23117 [-]   : {}[0m
[32m+ 23118 [-]   : app __x4__ = (WrapCompletion integer)[0m
[32m+ 23119 [-]   : return __x4__[0m

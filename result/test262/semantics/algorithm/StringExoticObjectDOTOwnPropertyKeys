[33mStringExoticObjectDOTOwnPropertyKeys[0m
[33m- Inst: 64 / 71 (90.14%)[0m
[33m- Cond: 19 / 26 (73.08%)[0m
[32m+ 22566 [-]   : { ... }[0m
[32m+ 22567 [-]   : let keys = (new [])[0m
[32m+ 22568 [-]   : let str = O["StringData"][0m
[32m+ 22569 [-]   : app __x0__ = (Type str)[0m
[32m+ 22570 [-]   : assert (= __x0__ String)[0m
[32m+ 22571 [-]   : let len = str["length"][0m
[32m+ 22572 [-]   : let i = 0i[0m
[32m+ 22573 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 22574 [-]   : { ... }[0m
[32m+ 22575 [-]   : app iStr = (ToString i)[0m
[32m+ 22576 [[31mF[0m/[32mT[0m[32m]: if (is-completion iStr) ... else ...[0m
[32m+ 22577 [-]   : iStr = iStr["Value"][0m
[32m+ 22578 [-]   : {}[0m
[32m+ 22579 [-]   : append iStr -> keys[0m
[32m+ 22580 [-]   : i = (+ i 1i)[0m
[32m+ 22581 [-]   : i = 0i[0m
[32m+ 22582 [-]   : let list = (map-keys O["SubMap"])[0m
[32m+ 22583 [-]   : let arrayIndexKeys = (new [])[0m
[32m+ 22584 [-]   : let stringKeys = (new [])[0m
[32m+ 22585 [-]   : let symbolKeys = (new [])[0m
[32m+ 22586 [-]   : len = list["length"][0m
[32m+ 22587 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 22588 [-]   : { ... }[0m
[32m+ 22589 [-]   : let P = list[i][0m
[32m+ 22590 [-]   : app T = (Type P)[0m
[32m+ 22591 [[32mT[0m/[32mT[0m[32m]: if (= T "String") ... else ...[0m
[32m+ 22592 [-]   : { ... }[0m
[32m+ 22593 [-]   : app isArrayIndex = (IsArrayIndex P)[0m
[32m+ 22594 [[32mT[0m/[32mT[0m[32m]: if isArrayIndex ... else ...[0m
[32m+ 22595 [-]   : { ... }[0m
[32m+ 22596 [-]   : app n = (ToInteger P)[0m
[32m+ 22597 [[32mT[0m/[31mF[0m[32m]: if (is-completion n) ... else ...[0m
[32m+ 22598 [-]   : n = n["Value"][0m
[31m- 22599 [-]   : {}[0m
[32m+ 22600 [[32mT[0m/[31mF[0m[32m]: if (! (< n str["length"])) ... else ...[0m
[32m+ 22601 [-]   : append n -> arrayIndexKeys[0m
[31m- 22602 [-]   : {}[0m
[32m+ 22603 [-]   : append P -> stringKeys[0m
[32m+ 22604 [-]   : append P -> symbolKeys[0m
[32m+ 22605 [-]   : i = (+ i 1i)[0m
[32m+ 22606 [-]   : len = arrayIndexKeys["length"][0m
[32m+ 22607 [[32mT[0m/[32mT[0m[32m]: while (< 0i len) { ... }[0m
[32m+ 22608 [-]   : { ... }[0m
[32m+ 22609 [-]   : let min = 0i[0m
[32m+ 22610 [-]   : let j = 1i[0m
[32m+ 22611 [[31mF[0m/[32mT[0m[32m]: while (< j len) { ... }[0m
[31m- 22612 [-]   : { ... }[0m
[31m- 22613 [-]   : if (< arrayIndexKeys[j] arrayIndexKeys[min]) ... else ...[0m
[31m- 22614 [-]   : min = j[0m
[31m- 22615 [-]   : {}[0m
[31m- 22616 [-]   : j = (+ j 1i)[0m
[32m+ 22617 [-]   : app P = (ToString (pop arrayIndexKeys min))[0m
[32m+ 22618 [[31mF[0m/[32mT[0m[32m]: if (is-completion P) ... else ...[0m
[32m+ 22619 [-]   : P = P["Value"][0m
[32m+ 22620 [-]   : {}[0m
[32m+ 22621 [-]   : append P -> keys[0m
[32m+ 22622 [-]   : len = (- len 1i)[0m
[32m+ 22623 [-]   : i = 0i[0m
[32m+ 22624 [-]   : len = stringKeys["length"][0m
[32m+ 22625 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 22626 [-]   : { ... }[0m
[32m+ 22627 [-]   : append stringKeys[i] -> keys[0m
[32m+ 22628 [-]   : i = (+ i 1i)[0m
[32m+ 22629 [-]   : i = 0i[0m
[32m+ 22630 [-]   : len = symbolKeys["length"][0m
[32m+ 22631 [[32mT[0m/[32mT[0m[32m]: while (< i len) { ... }[0m
[32m+ 22632 [-]   : { ... }[0m
[32m+ 22633 [-]   : append symbolKeys[i] -> keys[0m
[32m+ 22634 [-]   : i = (+ i 1i)[0m
[32m+ 22635 [-]   : app __x1__ = (WrapCompletion keys)[0m
[32m+ 22636 [-]   : return __x1__[0m

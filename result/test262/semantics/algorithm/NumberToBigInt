[32mNumberToBigInt[0m
[32m- Inst: 10 / 10 (100.00%)[0m
[32m- Cond: 2 / 2 (100.00%)[0m
[32m+ 19845 [-]   : { ... }[0m
[32m+ 19846 [-]   : app __x0__ = (Type number)[0m
[32m+ 19847 [-]   : assert (= __x0__ Number)[0m
[32m+ 19848 [-]   : app __x1__ = (IsInteger number)[0m
[32m+ 19849 [[32mT[0m/[32mT[0m[32m]: if (= __x1__ false) ... else ...[0m
[32m+ 19850 [-]   : { ... }[0m
[32m+ 19851 [-]   : app __x2__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_RangeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[32m+ 19852 [-]   : return __x2__[0m
[32m+ 19853 [-]   : {}[0m
[32m+ 19854 [-]   : return (convert number num2bigint )[0m

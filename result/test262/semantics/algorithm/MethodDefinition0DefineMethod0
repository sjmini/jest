[32mMethodDefinition0DefineMethod0[0m
[32m- Inst: 20 / 20 (100.00%)[0m
[32m- Cond: 6 / 6 (100.00%)[0m
[32m+ 19367 [-]   : { ... }[0m
[32m+ 19368 [-]   : access __x0__ = (PropertyName "Evaluation")[0m
[32m+ 19369 [-]   : let propKey = __x0__[0m
[32m+ 19370 [[32mT[0m/[32mT[0m[32m]: if (is-completion propKey) ... else ...[0m
[32m+ 19371 [[32mT[0m/[32mT[0m[32m]: if (= propKey["Type"] CONST_normal) ... else ...[0m
[32m+ 19372 [-]   : propKey = propKey["Value"][0m
[32m+ 19373 [-]   : return propKey[0m
[32m+ 19374 [-]   : {}[0m
[32m+ 19375 [-]   : propKey[0m
[32m+ 19376 [-]   : let scope = GLOBAL_context["LexicalEnvironment"][0m
[32m+ 19377 [[32mT[0m/[32mT[0m[32m]: if (! (= functionPrototype absent)) ... else ...[0m
[32m+ 19378 [-]   : let prototype = functionPrototype[0m
[32m+ 19379 [-]   : let prototype = INTRINSIC_FunctionPrototype[0m
[32m+ 19380 [-]   : app __x1__ = (OrdinaryFunctionCreate prototype UniqueFormalParameters FunctionBody CONST_nonlexicalthis scope)[0m
[32m+ 19381 [-]   : let closure = __x1__[0m
[32m+ 19382 [-]   : app __x2__ = (MakeMethod closure object)[0m
[32m+ 19383 [-]   : __x2__[0m
[32m+ 19384 [-]   : closure["SourceText"] = (get-syntax this)[0m
[32m+ 19385 [-]   : app __x3__ = (WrapCompletion (new Record("Key" -> propKey, "Closure" -> closure)))[0m
[32m+ 19386 [-]   : return __x3__[0m

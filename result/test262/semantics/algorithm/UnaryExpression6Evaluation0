[32mUnaryExpression6Evaluation0[0m
[32m- Inst: 24 / 24 (100.00%)[0m
[32m- Cond: 10 / 10 (100.00%)[0m
[32m+ 23728 [-]   : { ... }[0m
[32m+ 23729 [-]   : access __x0__ = (UnaryExpression "Evaluation")[0m
[32m+ 23730 [-]   : let expr = __x0__[0m
[32m+ 23731 [-]   : app __x1__ = (GetValue expr)[0m
[32m+ 23732 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 23733 [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 23734 [-]   : __x1__ = __x1__["Value"][0m
[32m+ 23735 [-]   : return __x1__[0m
[32m+ 23736 [-]   : {}[0m
[32m+ 23737 [-]   : app __x2__ = (ToNumeric __x1__)[0m
[32m+ 23738 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x2__) ... else ...[0m
[32m+ 23739 [[32mT[0m/[32mT[0m[32m]: if (= __x2__["Type"] CONST_normal) ... else ...[0m
[32m+ 23740 [-]   : __x2__ = __x2__["Value"][0m
[32m+ 23741 [-]   : return __x2__[0m
[32m+ 23742 [-]   : {}[0m
[32m+ 23743 [-]   : let oldValue = __x2__[0m
[32m+ 23744 [-]   : app __x3__ = (Type oldValue)[0m
[32m+ 23745 [-]   : let T = __x3__[0m
[32m+ 23746 [-]   : app result = (PRIMITIVES[T]["bitwiseNOT"] oldValue)[0m
[32m+ 23747 [[32mT[0m/[32mT[0m[32m]: if (is-completion result) ... else ...[0m
[32m+ 23748 [-]   : result = result["Value"][0m
[32m+ 23749 [-]   : {}[0m
[32m+ 23750 [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 23751 [-]   : return result[0m

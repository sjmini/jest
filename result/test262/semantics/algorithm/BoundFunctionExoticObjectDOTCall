[32mBoundFunctionExoticObjectDOTCall[0m
[32m- Inst: 21 / 21 (100.00%)[0m
[32m- Cond: 6 / 6 (100.00%)[0m
[32m+ 6218  [-]   : { ... }[0m
[32m+ 6219  [-]   : let target = F["BoundTargetFunction"][0m
[32m+ 6220  [-]   : let boundThis = F["BoundThis"][0m
[32m+ 6221  [-]   : let boundArgs = F["BoundArguments"][0m
[32m+ 6222  [-]   : let __x0__ = (copy-obj boundArgs)[0m
[32m+ 6223  [-]   : let __x1__ = argumentsList[0m
[32m+ 6224  [-]   : let __x2__ = 0i[0m
[32m+ 6225  [[32mT[0m/[32mT[0m[32m]: while (< __x2__ __x1__["length"]) { ... }[0m
[32m+ 6226  [-]   : { ... }[0m
[32m+ 6227  [-]   : let __x3__ = __x1__[__x2__][0m
[32m+ 6228  [-]   : append __x3__ -> __x0__[0m
[32m+ 6229  [-]   : __x2__ = (+ __x2__ 1i)[0m
[32m+ 6230  [-]   : let args = __x0__[0m
[32m+ 6231  [-]   : app __x4__ = (Call target boundThis args)[0m
[32m+ 6232  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x4__) ... else ...[0m
[32m+ 6233  [[32mT[0m/[32mT[0m[32m]: if (= __x4__["Type"] CONST_normal) ... else ...[0m
[32m+ 6234  [-]   : __x4__ = __x4__["Value"][0m
[32m+ 6235  [-]   : return __x4__[0m
[32m+ 6236  [-]   : {}[0m
[32m+ 6237  [-]   : app __x5__ = (WrapCompletion __x4__)[0m
[32m+ 6238  [-]   : return __x5__[0m

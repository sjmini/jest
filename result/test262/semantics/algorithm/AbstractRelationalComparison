[33mAbstractRelationalComparison[0m
[33m- Inst: 132 / 134 (98.51%)[0m
[33m- Cond: 56 / 60 (93.33%)[0m
[32m+ 3784  [-]   : { ... }[0m
[32m+ 3785  [[32mT[0m/[32mT[0m[32m]: if (= LeftFirst absent) ... else ...[0m
[32m+ 3786  [-]   : let LeftFirst = true[0m
[32m+ 3787  [-]   : {}[0m
[32m+ 3788  [[32mT[0m/[32mT[0m[32m]: if (= LeftFirst true) ... else ...[0m
[32m+ 3789  [-]   : { ... }[0m
[32m+ 3790  [-]   : app __x0__ = (ToPrimitive x Number)[0m
[32m+ 3791  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x0__) ... else ...[0m
[32m+ 3792  [[32mT[0m/[32mT[0m[32m]: if (= __x0__["Type"] CONST_normal) ... else ...[0m
[32m+ 3793  [-]   : __x0__ = __x0__["Value"][0m
[32m+ 3794  [-]   : return __x0__[0m
[32m+ 3795  [-]   : {}[0m
[32m+ 3796  [-]   : let px = __x0__[0m
[32m+ 3797  [-]   : app __x1__ = (ToPrimitive y Number)[0m
[32m+ 3798  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 3799  [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 3800  [-]   : __x1__ = __x1__["Value"][0m
[32m+ 3801  [-]   : return __x1__[0m
[32m+ 3802  [-]   : {}[0m
[32m+ 3803  [-]   : let py = __x1__[0m
[32m+ 3804  [-]   : { ... }[0m
[32m+ 3805  [-]   : app __x2__ = (ToPrimitive y Number)[0m
[32m+ 3806  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x2__) ... else ...[0m
[32m+ 3807  [[32mT[0m/[32mT[0m[32m]: if (= __x2__["Type"] CONST_normal) ... else ...[0m
[32m+ 3808  [-]   : __x2__ = __x2__["Value"][0m
[32m+ 3809  [-]   : return __x2__[0m
[32m+ 3810  [-]   : {}[0m
[32m+ 3811  [-]   : let py = __x2__[0m
[32m+ 3812  [-]   : app __x3__ = (ToPrimitive x Number)[0m
[32m+ 3813  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x3__) ... else ...[0m
[32m+ 3814  [[32mT[0m/[32mT[0m[32m]: if (= __x3__["Type"] CONST_normal) ... else ...[0m
[32m+ 3815  [-]   : __x3__ = __x3__["Value"][0m
[32m+ 3816  [-]   : return __x3__[0m
[32m+ 3817  [-]   : {}[0m
[32m+ 3818  [-]   : let px = __x3__[0m
[32m+ 3819  [-]   : app __x4__ = (Type px)[0m
[32m+ 3820  [-]   : let __x5__ = (= __x4__ String)[0m
[32m+ 3821  [[32mT[0m/[32mT[0m[32m]: if __x5__ ... else ...[0m
[32m+ 3822  [-]   : { ... }[0m
[32m+ 3823  [-]   : app __x6__ = (Type py)[0m
[32m+ 3824  [-]   : __x5__ = (= __x6__ String)[0m
[32m+ 3825  [-]   : {}[0m
[32m+ 3826  [[32mT[0m/[32mT[0m[32m]: if __x5__ ... else ...[0m
[32m+ 3827  [-]   : return (< px py)[0m
[32m+ 3828  [-]   : { ... }[0m
[32m+ 3829  [-]   : app __x7__ = (Type px)[0m
[32m+ 3830  [-]   : let __x8__ = (= __x7__ BigInt)[0m
[32m+ 3831  [[32mT[0m/[32mT[0m[32m]: if __x8__ ... else ...[0m
[32m+ 3832  [-]   : { ... }[0m
[32m+ 3833  [-]   : app __x9__ = (Type py)[0m
[32m+ 3834  [-]   : __x8__ = (= __x9__ String)[0m
[32m+ 3835  [-]   : {}[0m
[32m+ 3836  [[32mT[0m/[32mT[0m[32m]: if __x8__ ... else ...[0m
[32m+ 3837  [-]   : { ... }[0m
[32m+ 3838  [-]   : app __x10__ = (StringToBigInt py)[0m
[32m+ 3839  [[31mF[0m/[32mT[0m[32m]: if (is-completion __x10__) ... else ...[0m
[32m+ 3840  [[32mT[0m/[31mF[0m[32m]: if (= __x10__["Type"] CONST_normal) ... else ...[0m
[32m+ 3841  [-]   : __x10__ = __x10__["Value"][0m
[31m- 3842  [-]   : return __x10__[0m
[32m+ 3843  [-]   : {}[0m
[32m+ 3844  [-]   : let ny = __x10__[0m
[32m+ 3845  [[32mT[0m/[32mT[0m[32m]: if (= ny NaN) ... else ...[0m
[32m+ 3846  [-]   : { ... }[0m
[32m+ 3847  [-]   : app __x11__ = (WrapCompletion undefined)[0m
[32m+ 3848  [-]   : return __x11__[0m
[32m+ 3849  [-]   : {}[0m
[32m+ 3850  [-]   : app result = (PRIMITIVES["BigInt"]["lessThan"] px ny)[0m
[32m+ 3851  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 3852  [-]   : return wrapped[0m
[32m+ 3853  [-]   : {}[0m
[32m+ 3854  [-]   : app __x12__ = (Type px)[0m
[32m+ 3855  [-]   : let __x13__ = (= __x12__ String)[0m
[32m+ 3856  [[32mT[0m/[32mT[0m[32m]: if __x13__ ... else ...[0m
[32m+ 3857  [-]   : { ... }[0m
[32m+ 3858  [-]   : app __x14__ = (Type py)[0m
[32m+ 3859  [-]   : __x13__ = (= __x14__ BigInt)[0m
[32m+ 3860  [-]   : {}[0m
[32m+ 3861  [[32mT[0m/[32mT[0m[32m]: if __x13__ ... else ...[0m
[32m+ 3862  [-]   : { ... }[0m
[32m+ 3863  [-]   : app __x15__ = (StringToBigInt px)[0m
[32m+ 3864  [[31mF[0m/[32mT[0m[32m]: if (is-completion __x15__) ... else ...[0m
[32m+ 3865  [[32mT[0m/[31mF[0m[32m]: if (= __x15__["Type"] CONST_normal) ... else ...[0m
[32m+ 3866  [-]   : __x15__ = __x15__["Value"][0m
[31m- 3867  [-]   : return __x15__[0m
[32m+ 3868  [-]   : {}[0m
[32m+ 3869  [-]   : let nx = __x15__[0m
[32m+ 3870  [[32mT[0m/[32mT[0m[32m]: if (= nx NaN) ... else ...[0m
[32m+ 3871  [-]   : { ... }[0m
[32m+ 3872  [-]   : app __x16__ = (WrapCompletion undefined)[0m
[32m+ 3873  [-]   : return __x16__[0m
[32m+ 3874  [-]   : {}[0m
[32m+ 3875  [-]   : app result = (PRIMITIVES["BigInt"]["lessThan"] nx py)[0m
[32m+ 3876  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 3877  [-]   : return wrapped[0m
[32m+ 3878  [-]   : {}[0m
[32m+ 3879  [-]   : app __x17__ = (ToNumeric px)[0m
[32m+ 3880  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x17__) ... else ...[0m
[32m+ 3881  [[32mT[0m/[32mT[0m[32m]: if (= __x17__["Type"] CONST_normal) ... else ...[0m
[32m+ 3882  [-]   : __x17__ = __x17__["Value"][0m
[32m+ 3883  [-]   : return __x17__[0m
[32m+ 3884  [-]   : {}[0m
[32m+ 3885  [-]   : let nx = __x17__[0m
[32m+ 3886  [-]   : app __x18__ = (ToNumeric py)[0m
[32m+ 3887  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x18__) ... else ...[0m
[32m+ 3888  [[32mT[0m/[32mT[0m[32m]: if (= __x18__["Type"] CONST_normal) ... else ...[0m
[32m+ 3889  [-]   : __x18__ = __x18__["Value"][0m
[32m+ 3890  [-]   : return __x18__[0m
[32m+ 3891  [-]   : {}[0m
[32m+ 3892  [-]   : let ny = __x18__[0m
[32m+ 3893  [-]   : app nxT = (Type nx)[0m
[32m+ 3894  [-]   : app nyT = (Type ny)[0m
[32m+ 3895  [[32mT[0m/[32mT[0m[32m]: if (= nxT nyT) ... else ...[0m
[32m+ 3896  [-]   : { ... }[0m
[32m+ 3897  [-]   : app result = (PRIMITIVES[nxT]["lessThan"] nx ny)[0m
[32m+ 3898  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 3899  [-]   : return wrapped[0m
[32m+ 3900  [-]   : {}[0m
[32m+ 3901  [-]   : assert (|| (&& (= nxT BigInt) (= nyT Number)) (&& (= nxT Number) (= nyT BigInt)))[0m
[32m+ 3902  [[32mT[0m/[32mT[0m[32m]: if (|| (= nx NaN) (= ny NaN)) ... else ...[0m
[32m+ 3903  [-]   : { ... }[0m
[32m+ 3904  [-]   : app __x26__ = (WrapCompletion undefined)[0m
[32m+ 3905  [-]   : return __x26__[0m
[32m+ 3906  [-]   : {}[0m
[32m+ 3907  [[32mT[0m/[32mT[0m[32m]: if (|| (= nx -Infinity) (= ny Infinity)) ... else ...[0m
[32m+ 3908  [-]   : { ... }[0m
[32m+ 3909  [-]   : app __x27__ = (WrapCompletion true)[0m
[32m+ 3910  [-]   : return __x27__[0m
[32m+ 3911  [-]   : {}[0m
[32m+ 3912  [[32mT[0m/[32mT[0m[32m]: if (|| (= nx Infinity) (= ny -Infinity)) ... else ...[0m
[32m+ 3913  [-]   : { ... }[0m
[32m+ 3914  [-]   : app __x28__ = (WrapCompletion false)[0m
[32m+ 3915  [-]   : return __x28__[0m
[32m+ 3916  [-]   : {}[0m
[32m+ 3917  [-]   : return (< nx ny)[0m

[33mToInt32[0m
[33m- Inst: 21 / 22 (95.45%)[0m
[33m- Cond: 6 / 8 (75.00%)[0m
[32m+ 23072 [-]   : { ... }[0m
[32m+ 23073 [-]   : app __x0__ = (ToNumber argument)[0m
[32m+ 23074 [[31mF[0m/[32mT[0m[32m]: if (is-completion __x0__) ... else ...[0m
[32m+ 23075 [[32mT[0m/[31mF[0m[32m]: if (= __x0__["Type"] CONST_normal) ... else ...[0m
[32m+ 23076 [-]   : __x0__ = __x0__["Value"][0m
[31m- 23077 [-]   : return __x0__[0m
[32m+ 23078 [-]   : {}[0m
[32m+ 23079 [-]   : let number = __x0__[0m
[32m+ 23080 [[32mT[0m/[32mT[0m[32m]: if (|| (|| (|| (|| (= number NaN) (= number 0i)) (= number -0.0)) (= number Infinity)) (= number -Infinity)) ... else ...[0m
[32m+ 23081 [-]   : { ... }[0m
[32m+ 23082 [-]   : app __x1__ = (WrapCompletion 0i)[0m
[32m+ 23083 [-]   : return __x1__[0m
[32m+ 23084 [-]   : {}[0m
[32m+ 23085 [-]   : let int = (convert number num2int )[0m
[32m+ 23086 [-]   : let int32bit = (%% int 4294967296i)[0m
[32m+ 23087 [[32mT[0m/[32mT[0m[32m]: if (! (< int32bit 2147483648i)) ... else ...[0m
[32m+ 23088 [-]   : { ... }[0m
[32m+ 23089 [-]   : app __x2__ = (WrapCompletion (- int32bit 4294967296i))[0m
[32m+ 23090 [-]   : return __x2__[0m
[32m+ 23091 [-]   : { ... }[0m
[32m+ 23092 [-]   : app __x3__ = (WrapCompletion int32bit)[0m
[32m+ 23093 [-]   : return __x3__[0m

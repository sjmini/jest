[32mthisNumberValue[0m
[32m- Inst: 18 / 18 (100.00%)[0m
[32m- Cond: 4 / 4 (100.00%)[0m
[32m+ 24441 [-]   : { ... }[0m
[32m+ 24442 [-]   : app __x0__ = (Type value)[0m
[32m+ 24443 [[32mT[0m/[32mT[0m[32m]: if (= __x0__ Number) ... else ...[0m
[32m+ 24444 [-]   : { ... }[0m
[32m+ 24445 [-]   : app __x1__ = (WrapCompletion value)[0m
[32m+ 24446 [-]   : return __x1__[0m
[32m+ 24447 [-]   : {}[0m
[32m+ 24448 [-]   : app __x2__ = (Type value)[0m
[32m+ 24449 [[32mT[0m/[32mT[0m[32m]: if (&& (= __x2__ Object) (! (= value["NumberData"] absent))) ... else ...[0m
[32m+ 24450 [-]   : { ... }[0m
[32m+ 24451 [-]   : let n = value["NumberData"][0m
[32m+ 24452 [-]   : app __x3__ = (Type n)[0m
[32m+ 24453 [-]   : assert (= __x3__ Number)[0m
[32m+ 24454 [-]   : app __x4__ = (WrapCompletion n)[0m
[32m+ 24455 [-]   : return __x4__[0m
[32m+ 24456 [-]   : {}[0m
[32m+ 24457 [-]   : app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[32m+ 24458 [-]   : return __x5__[0m

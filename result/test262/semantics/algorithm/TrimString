[32mTrimString[0m
[32m- Inst: 24 / 24 (100.00%)[0m
[32m- Cond: 12 / 12 (100.00%)[0m
[32m+ 23564 [-]   : { ... }[0m
[32m+ 23565 [-]   : app __x0__ = (RequireObjectCoercible string)[0m
[32m+ 23566 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x0__) ... else ...[0m
[32m+ 23567 [[32mT[0m/[32mT[0m[32m]: if (= __x0__["Type"] CONST_normal) ... else ...[0m
[32m+ 23568 [-]   : __x0__ = __x0__["Value"][0m
[32m+ 23569 [-]   : return __x0__[0m
[32m+ 23570 [-]   : {}[0m
[32m+ 23571 [-]   : let str = __x0__[0m
[32m+ 23572 [-]   : app __x1__ = (ToString str)[0m
[32m+ 23573 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 23574 [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 23575 [-]   : __x1__ = __x1__["Value"][0m
[32m+ 23576 [-]   : return __x1__[0m
[32m+ 23577 [-]   : {}[0m
[32m+ 23578 [-]   : let S = __x1__[0m
[32m+ 23579 [[32mT[0m/[32mT[0m[32m]: if (= where CONST_start) ... else ...[0m
[32m+ 23580 [-]   : let T = S["ltrim"][0m
[32m+ 23581 [[32mT[0m/[32mT[0m[32m]: if (= where CONST_end) ... else ...[0m
[32m+ 23582 [-]   : let T = S["rtrim"][0m
[32m+ 23583 [-]   : { ... }[0m
[32m+ 23584 [-]   : assert (= where CONST_startPLUSend)[0m
[32m+ 23585 [-]   : let T = S["ltrim"]["rtrim"][0m
[32m+ 23586 [-]   : app __x2__ = (WrapCompletion T)[0m
[32m+ 23587 [-]   : return __x2__[0m

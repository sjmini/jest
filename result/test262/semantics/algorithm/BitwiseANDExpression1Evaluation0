[32mBitwiseANDExpression1Evaluation0[0m
[32m- Inst: 44 / 44 (100.00%)[0m
[32m- Cond: 18 / 18 (100.00%)[0m
[32m+ 3437  [-]   : { ... }[0m
[32m+ 3438  [-]   : access __x0__ = (A "Evaluation")[0m
[32m+ 3439  [-]   : let lref = __x0__[0m
[32m+ 3440  [-]   : app __x1__ = (GetValue lref)[0m
[32m+ 3441  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 3442  [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 3443  [-]   : __x1__ = __x1__["Value"][0m
[32m+ 3444  [-]   : return __x1__[0m
[32m+ 3445  [-]   : {}[0m
[32m+ 3446  [-]   : let lval = __x1__[0m
[32m+ 3447  [-]   : access __x2__ = (B "Evaluation")[0m
[32m+ 3448  [-]   : let rref = __x2__[0m
[32m+ 3449  [-]   : app __x3__ = (GetValue rref)[0m
[32m+ 3450  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x3__) ... else ...[0m
[32m+ 3451  [[32mT[0m/[32mT[0m[32m]: if (= __x3__["Type"] CONST_normal) ... else ...[0m
[32m+ 3452  [-]   : __x3__ = __x3__["Value"][0m
[32m+ 3453  [-]   : return __x3__[0m
[32m+ 3454  [-]   : {}[0m
[32m+ 3455  [-]   : let rval = __x3__[0m
[32m+ 3456  [-]   : app __x4__ = (ToNumeric lval)[0m
[32m+ 3457  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x4__) ... else ...[0m
[32m+ 3458  [[32mT[0m/[32mT[0m[32m]: if (= __x4__["Type"] CONST_normal) ... else ...[0m
[32m+ 3459  [-]   : __x4__ = __x4__["Value"][0m
[32m+ 3460  [-]   : return __x4__[0m
[32m+ 3461  [-]   : {}[0m
[32m+ 3462  [-]   : let lnum = __x4__[0m
[32m+ 3463  [-]   : app __x5__ = (ToNumeric rval)[0m
[32m+ 3464  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x5__) ... else ...[0m
[32m+ 3465  [[32mT[0m/[32mT[0m[32m]: if (= __x5__["Type"] CONST_normal) ... else ...[0m
[32m+ 3466  [-]   : __x5__ = __x5__["Value"][0m
[32m+ 3467  [-]   : return __x5__[0m
[32m+ 3468  [-]   : {}[0m
[32m+ 3469  [-]   : let rnum = __x5__[0m
[32m+ 3470  [-]   : app lT = (Type lnum)[0m
[32m+ 3471  [-]   : app rT = (Type rnum)[0m
[32m+ 3472  [[32mT[0m/[32mT[0m[32m]: if (! (= lT rT)) ... else ...[0m
[32m+ 3473  [-]   : { ... }[0m
[32m+ 3474  [-]   : app result = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[32m+ 3475  [-]   : return result[0m
[32m+ 3476  [-]   : {}[0m
[32m+ 3477  [-]   : let T = lT[0m
[32m+ 3478  [-]   : app result = (PRIMITIVES[T]["bitwiseAND"] lnum rnum)[0m
[32m+ 3479  [-]   : app wrapped = (WrapCompletion result)[0m
[32m+ 3480  [-]   : return wrapped[0m

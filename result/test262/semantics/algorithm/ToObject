[33mToObject[0m
[33m- Inst: 62 / 73 (84.93%)[0m
[33m- Cond: 25 / 36 (69.44%)[0m
[32m+ 23191 [-]   : { ... }[0m
[32m+ 23192 [-]   : app atype = (Type argument)[0m
[32m+ 23193 [[32mT[0m/[32mT[0m[32m]: if (= atype "Undefined") ... else ...[0m
[32m+ 23194 [-]   : { ... }[0m
[32m+ 23195 [-]   : return (new Completion("Type" -> CONST_throw, "Value" -> (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "Extensible" -> false, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))), "Target" -> CONST_empty))[0m
[32m+ 23196 [[32mT[0m/[32mT[0m[32m]: if (= atype "Null") ... else ...[0m
[32m+ 23197 [-]   : { ... }[0m
[32m+ 23198 [-]   : return (new Completion("Type" -> CONST_throw, "Value" -> (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "Extensible" -> false, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))), "Target" -> CONST_empty))[0m
[32m+ 23199 [[32mT[0m/[32mT[0m[32m]: if (= atype "Boolean") ... else ...[0m
[32m+ 23200 [-]   : { ... }[0m
[32m+ 23201 [-]   : let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_BooleanPrototype, "Extensible" -> true))[0m
[32m+ 23202 [-]   : obj["BooleanData"] = argument[0m
[32m+ 23203 [-]   : obj["SubMap"] = (new SubMap())[0m
[32m+ 23204 [-]   : return obj[0m
[32m+ 23205 [[32mT[0m/[32mT[0m[32m]: if (= atype "Number") ... else ...[0m
[32m+ 23206 [-]   : { ... }[0m
[32m+ 23207 [-]   : let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_NumberPrototype, "Extensible" -> true))[0m
[32m+ 23208 [-]   : obj["NumberData"] = argument[0m
[32m+ 23209 [-]   : obj["SubMap"] = (new SubMap())[0m
[32m+ 23210 [-]   : return obj[0m
[32m+ 23211 [[32mT[0m/[32mT[0m[32m]: if (= atype "String") ... else ...[0m
[32m+ 23212 [-]   : { ... }[0m
[32m+ 23213 [-]   : let obj = (new StringExoticObject("Prototype" -> INTRINSIC_StringPrototype, "Extensible" -> true))[0m
[32m+ 23214 [-]   : obj["StringData"] = argument[0m
[32m+ 23215 [[31mF[0m/[32mT[0m[32m]: if (= obj["HasProperty"] absent) ... else ...[0m
[31m- 23216 [-]   : obj["HasProperty"] = OrdinaryObjectDOTHasProperty[0m
[32m+ 23217 [-]   : {}[0m
[32m+ 23218 [[31mF[0m/[32mT[0m[32m]: if (= obj["DefineOwnProperty"] absent) ... else ...[0m
[31m- 23219 [-]   : obj["DefineOwnProperty"] = OrdinaryObjectDOTDefineOwnProperty[0m
[32m+ 23220 [-]   : {}[0m
[32m+ 23221 [[31mF[0m/[32mT[0m[32m]: if (= obj["Set"] absent) ... else ...[0m
[31m- 23222 [-]   : obj["Set"] = OrdinaryObjectDOTSet[0m
[32m+ 23223 [-]   : {}[0m
[32m+ 23224 [[31mF[0m/[32mT[0m[32m]: if (= obj["SetPrototypeOf"] absent) ... else ...[0m
[31m- 23225 [-]   : obj["SetPrototypeOf"] = OrdinaryObjectDOTSetPrototypeOf[0m
[32m+ 23226 [-]   : {}[0m
[32m+ 23227 [[31mF[0m/[32mT[0m[32m]: if (= obj["Get"] absent) ... else ...[0m
[31m- 23228 [-]   : obj["Get"] = OrdinaryObjectDOTGet[0m
[32m+ 23229 [-]   : {}[0m
[32m+ 23230 [[31mF[0m/[32mT[0m[32m]: if (= obj["PreventExtensions"] absent) ... else ...[0m
[31m- 23231 [-]   : obj["PreventExtensions"] = OrdinaryObjectDOTPreventExtensions[0m
[32m+ 23232 [-]   : {}[0m
[32m+ 23233 [[31mF[0m/[32mT[0m[32m]: if (= obj["Delete"] absent) ... else ...[0m
[31m- 23234 [-]   : obj["Delete"] = OrdinaryObjectDOTDelete[0m
[32m+ 23235 [-]   : {}[0m
[32m+ 23236 [[31mF[0m/[32mT[0m[32m]: if (= obj["GetOwnProperty"] absent) ... else ...[0m
[31m- 23237 [-]   : obj["GetOwnProperty"] = OrdinaryObjectDOTGetOwnProperty[0m
[32m+ 23238 [-]   : {}[0m
[32m+ 23239 [[31mF[0m/[32mT[0m[32m]: if (= obj["OwnPropertyKeys"] absent) ... else ...[0m
[31m- 23240 [-]   : obj["OwnPropertyKeys"] = OrdinaryObjectDOTOwnPropertyKeys[0m
[32m+ 23241 [-]   : {}[0m
[32m+ 23242 [[31mF[0m/[32mT[0m[32m]: if (= obj["GetPrototypeOf"] absent) ... else ...[0m
[31m- 23243 [-]   : obj["GetPrototypeOf"] = OrdinaryObjectDOTGetPrototypeOf[0m
[32m+ 23244 [-]   : {}[0m
[32m+ 23245 [[31mF[0m/[32mT[0m[32m]: if (= obj["IsExtensible"] absent) ... else ...[0m
[31m- 23246 [-]   : obj["IsExtensible"] = OrdinaryObjectDOTIsExtensible[0m
[32m+ 23247 [-]   : {}[0m
[32m+ 23248 [-]   : obj["SubMap"] = (new SubMap("length" -> (new DataProperty("Value" -> argument["length"], "Writable" -> false, "Enumerable" -> false, "Configurable" -> false))))[0m
[32m+ 23249 [-]   : return obj[0m
[32m+ 23250 [[32mT[0m/[32mT[0m[32m]: if (= atype "Symbol") ... else ...[0m
[32m+ 23251 [-]   : { ... }[0m
[32m+ 23252 [-]   : let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_SymbolPrototype, "Extensible" -> true))[0m
[32m+ 23253 [-]   : obj["SymbolData"] = argument[0m
[32m+ 23254 [-]   : obj["SubMap"] = (new SubMap())[0m
[32m+ 23255 [-]   : return obj[0m
[32m+ 23256 [[32mT[0m/[32mT[0m[32m]: if (= atype "BigInt") ... else ...[0m
[32m+ 23257 [-]   : { ... }[0m
[32m+ 23258 [-]   : let obj = (new OrdinaryObject("Prototype" -> INTRINSIC_BigInt["SubMap"]["prototype"]["Value"], "Extensible" -> true))[0m
[32m+ 23259 [-]   : obj["BigIntData"] = argument[0m
[32m+ 23260 [-]   : obj["SubMap"] = (new SubMap())[0m
[32m+ 23261 [-]   : return obj[0m
[32m+ 23262 [-]   : { ... }[0m
[32m+ 23263 [-]   : return argument[0m

[33mEvalDeclarationInstantiation[0m
[33m- Inst: 139 / 235 (59.15%)[0m
[33m- Cond: 48 / 102 (47.06%)[0m
[32m+ 8155  [-]   : { ... }[0m
[32m+ 8156  [-]   : access __x0__ = (body "VarDeclaredNames")[0m
[32m+ 8157  [-]   : let varNames = __x0__[0m
[32m+ 8158  [-]   : access __x1__ = (body "VarScopedDeclarations")[0m
[32m+ 8159  [-]   : let varDeclarations = __x1__[0m
[32m+ 8160  [-]   : let lexEnvRec = lexEnv["EnvironmentRecord"][0m
[32m+ 8161  [-]   : let varEnvRec = varEnv["EnvironmentRecord"][0m
[32m+ 8162  [[31mF[0m/[32mT[0m[32m]: if (= strict false) ... else ...[0m
[31m- 8163  [-]   : { ... }[0m
[31m- 8164  [-]   : if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 8165  [-]   : { ... }[0m
[31m- 8166  [-]   : let __x2__ = varNames[0m
[31m- 8167  [-]   : let __x3__ = 0i[0m
[31m- 8168  [-]   : while (< __x3__ __x2__["length"]) { ... }[0m
[31m- 8169  [-]   : { ... }[0m
[31m- 8170  [-]   : let name = __x2__[__x3__][0m
[31m- 8171  [-]   : app __x4__ = (varEnvRec["HasLexicalDeclaration"] varEnvRec name)[0m
[31m- 8172  [-]   : if (= __x4__ true) ... else ...[0m
[31m- 8173  [-]   : { ... }[0m
[31m- 8174  [-]   : app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8175  [-]   : return __x5__[0m
[31m- 8176  [-]   : {}[0m
[31m- 8177  [-]   : __x3__ = (+ __x3__ 1i)[0m
[31m- 8178  [-]   : {}[0m
[31m- 8179  [-]   : let thisLex = lexEnv[0m
[31m- 8180  [-]   : while (! (= thisLex varEnv)) { ... }[0m
[31m- 8181  [-]   : { ... }[0m
[31m- 8182  [-]   : let thisEnvRec = thisLex["EnvironmentRecord"][0m
[31m- 8183  [-]   : if (! (= (typeof thisEnvRec) "ObjectEnvironmentRecord")) ... else ...[0m
[31m- 8184  [-]   : { ... }[0m
[31m- 8185  [-]   : let __x6__ = varNames[0m
[31m- 8186  [-]   : let __x7__ = 0i[0m
[31m- 8187  [-]   : while (< __x7__ __x6__["length"]) { ... }[0m
[31m- 8188  [-]   : { ... }[0m
[31m- 8189  [-]   : let name = __x6__[__x7__][0m
[31m- 8190  [-]   : app __x8__ = (thisEnvRec["HasBinding"] thisEnvRec name)[0m
[31m- 8191  [-]   : if (= __x8__ true) ... else ...[0m
[31m- 8192  [-]   : { ... }[0m
[31m- 8193  [-]   : app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8194  [-]   : return __x9__[0m
[31m- 8195  [-]   : {}[0m
[31m- 8196  [-]   : __x7__ = (+ __x7__ 1i)[0m
[31m- 8197  [-]   : {}[0m
[31m- 8198  [-]   : thisLex = thisLex["Outer"][0m
[32m+ 8199  [-]   : {}[0m
[32m+ 8200  [-]   : let functionsToInitialize = (new [])[0m
[32m+ 8201  [-]   : let declaredFunctionNames = (new [])[0m
[32m+ 8202  [-]   : let __x10__ = varDeclarations[0m
[32m+ 8203  [-]   : let __x11__ = __x10__["length"][0m
[32m+ 8204  [[32mT[0m/[32mT[0m[32m]: while (< 0i __x11__) { ... }[0m
[32m+ 8205  [-]   : { ... }[0m
[32m+ 8206  [-]   : __x11__ = (- __x11__ 1i)[0m
[32m+ 8207  [-]   : let d = __x10__[__x11__][0m
[32m+ 8208  [[32mT[0m/[32mT[0m[32m]: if (! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))) ... else ...[0m
[32m+ 8209  [-]   : { ... }[0m
[32m+ 8210  [-]   : assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))[0m
[32m+ 8211  [-]   : access __x12__ = (d "BoundNames")[0m
[32m+ 8212  [-]   : let fn = __x12__[0i][0m
[32m+ 8213  [[32mT[0m/[31mF[0m[32m]: if (! (contains declaredFunctionNames fn)) ... else ...[0m
[32m+ 8214  [-]   : { ... }[0m
[32m+ 8215  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 8216  [-]   : { ... }[0m
[31m- 8217  [-]   : app __x13__ = (varEnvRec["CanDeclareGlobalFunction"] varEnvRec fn)[0m
[31m- 8218  [-]   : if (is-completion __x13__) ... else ...[0m
[31m- 8219  [-]   : if (= __x13__["Type"] CONST_normal) ... else ...[0m
[31m- 8220  [-]   : __x13__ = __x13__["Value"][0m
[31m- 8221  [-]   : return __x13__[0m
[31m- 8222  [-]   : {}[0m
[31m- 8223  [-]   : let fnDefinable = __x13__[0m
[31m- 8224  [-]   : if (= fnDefinable false) ... else ...[0m
[31m- 8225  [-]   : { ... }[0m
[31m- 8226  [-]   : app __x14__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8227  [-]   : return __x14__[0m
[31m- 8228  [-]   : {}[0m
[32m+ 8229  [-]   : {}[0m
[32m+ 8230  [-]   : append fn -> declaredFunctionNames[0m
[32m+ 8231  [-]   : prepend d -> functionsToInitialize[0m
[31m- 8232  [-]   : {}[0m
[32m+ 8233  [-]   : {}[0m
[32m+ 8234  [-]   : let declaredVarNames = (new [])[0m
[32m+ 8235  [-]   : let __x15__ = varDeclarations[0m
[32m+ 8236  [-]   : let __x16__ = 0i[0m
[32m+ 8237  [[32mT[0m/[32mT[0m[32m]: while (< __x16__ __x15__["length"]) { ... }[0m
[32m+ 8238  [-]   : { ... }[0m
[32m+ 8239  [-]   : let d = __x15__[__x16__][0m
[32m+ 8240  [[32mT[0m/[32mT[0m[32m]: if (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)) ... else ...[0m
[32m+ 8241  [-]   : { ... }[0m
[32m+ 8242  [-]   : access __x17__ = (d "BoundNames")[0m
[32m+ 8243  [-]   : let __x18__ = __x17__[0m
[32m+ 8244  [-]   : let __x19__ = 0i[0m
[32m+ 8245  [[32mT[0m/[32mT[0m[32m]: while (< __x19__ __x18__["length"]) { ... }[0m
[32m+ 8246  [-]   : { ... }[0m
[32m+ 8247  [-]   : let vn = __x18__[__x19__][0m
[32m+ 8248  [[32mT[0m/[31mF[0m[32m]: if (! (contains declaredFunctionNames vn)) ... else ...[0m
[32m+ 8249  [-]   : { ... }[0m
[32m+ 8250  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 8251  [-]   : { ... }[0m
[31m- 8252  [-]   : app __x20__ = (varEnvRec["CanDeclareGlobalVar"] varEnvRec vn)[0m
[31m- 8253  [-]   : if (is-completion __x20__) ... else ...[0m
[31m- 8254  [-]   : if (= __x20__["Type"] CONST_normal) ... else ...[0m
[31m- 8255  [-]   : __x20__ = __x20__["Value"][0m
[31m- 8256  [-]   : return __x20__[0m
[31m- 8257  [-]   : {}[0m
[31m- 8258  [-]   : let vnDefinable = __x20__[0m
[31m- 8259  [-]   : if (= vnDefinable false) ... else ...[0m
[31m- 8260  [-]   : { ... }[0m
[31m- 8261  [-]   : app __x21__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 8262  [-]   : return __x21__[0m
[31m- 8263  [-]   : {}[0m
[32m+ 8264  [-]   : {}[0m
[32m+ 8265  [[32mT[0m/[31mF[0m[32m]: if (! (contains declaredVarNames vn)) ... else ...[0m
[32m+ 8266  [-]   : append vn -> declaredVarNames[0m
[31m- 8267  [-]   : {}[0m
[31m- 8268  [-]   : {}[0m
[32m+ 8269  [-]   : __x19__ = (+ __x19__ 1i)[0m
[32m+ 8270  [-]   : {}[0m
[32m+ 8271  [-]   : __x16__ = (+ __x16__ 1i)[0m
[32m+ 8272  [-]   : access __x22__ = (body "LexicallyScopedDeclarations")[0m
[32m+ 8273  [-]   : let lexDeclarations = __x22__[0m
[32m+ 8274  [-]   : let __x23__ = lexDeclarations[0m
[32m+ 8275  [-]   : let __x24__ = 0i[0m
[32m+ 8276  [[32mT[0m/[32mT[0m[32m]: while (< __x24__ __x23__["length"]) { ... }[0m
[32m+ 8277  [-]   : { ... }[0m
[32m+ 8278  [-]   : let d = __x23__[__x24__][0m
[32m+ 8279  [-]   : access __x25__ = (d "BoundNames")[0m
[32m+ 8280  [-]   : let __x26__ = __x25__[0m
[32m+ 8281  [-]   : let __x27__ = 0i[0m
[32m+ 8282  [[32mT[0m/[32mT[0m[32m]: while (< __x27__ __x26__["length"]) { ... }[0m
[32m+ 8283  [-]   : { ... }[0m
[32m+ 8284  [-]   : let dn = __x26__[__x27__][0m
[32m+ 8285  [-]   : access __x28__ = (d "IsConstantDeclaration")[0m
[32m+ 8286  [[32mT[0m/[32mT[0m[32m]: if (= __x28__ true) ... else ...[0m
[32m+ 8287  [-]   : { ... }[0m
[32m+ 8288  [-]   : app __x29__ = (lexEnvRec["CreateImmutableBinding"] lexEnvRec dn true)[0m
[32m+ 8289  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x29__) ... else ...[0m
[32m+ 8290  [[32mT[0m/[31mF[0m[32m]: if (= __x29__["Type"] CONST_normal) ... else ...[0m
[32m+ 8291  [-]   : __x29__ = __x29__["Value"][0m
[31m- 8292  [-]   : return __x29__[0m
[32m+ 8293  [-]   : {}[0m
[32m+ 8294  [-]   : __x29__[0m
[32m+ 8295  [-]   : { ... }[0m
[32m+ 8296  [-]   : app __x30__ = (lexEnvRec["CreateMutableBinding"] lexEnvRec dn false)[0m
[32m+ 8297  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x30__) ... else ...[0m
[32m+ 8298  [[32mT[0m/[31mF[0m[32m]: if (= __x30__["Type"] CONST_normal) ... else ...[0m
[32m+ 8299  [-]   : __x30__ = __x30__["Value"][0m
[31m- 8300  [-]   : return __x30__[0m
[32m+ 8301  [-]   : {}[0m
[32m+ 8302  [-]   : __x30__[0m
[32m+ 8303  [-]   : __x27__ = (+ __x27__ 1i)[0m
[32m+ 8304  [-]   : __x24__ = (+ __x24__ 1i)[0m
[32m+ 8305  [-]   : let __x31__ = functionsToInitialize[0m
[32m+ 8306  [-]   : let __x32__ = 0i[0m
[32m+ 8307  [[32mT[0m/[32mT[0m[32m]: while (< __x32__ __x31__["length"]) { ... }[0m
[32m+ 8308  [-]   : { ... }[0m
[32m+ 8309  [-]   : let f = __x31__[__x32__][0m
[32m+ 8310  [-]   : access __x33__ = (f "BoundNames")[0m
[32m+ 8311  [-]   : let fn = __x33__[0i][0m
[32m+ 8312  [-]   : access __x34__ = (f "InstantiateFunctionObject")[0m
[32m+ 8313  [-]   : app __x35__ = (__x34__ lexEnv)[0m
[32m+ 8314  [-]   : let fo = __x35__[0m
[32m+ 8315  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 8316  [-]   : { ... }[0m
[31m- 8317  [-]   : app __x36__ = (varEnvRec["CreateGlobalFunctionBinding"] varEnvRec fn fo true)[0m
[31m- 8318  [-]   : if (is-completion __x36__) ... else ...[0m
[31m- 8319  [-]   : if (= __x36__["Type"] CONST_normal) ... else ...[0m
[31m- 8320  [-]   : __x36__ = __x36__["Value"][0m
[31m- 8321  [-]   : return __x36__[0m
[31m- 8322  [-]   : {}[0m
[31m- 8323  [-]   : __x36__[0m
[32m+ 8324  [-]   : { ... }[0m
[32m+ 8325  [-]   : app __x37__ = (varEnvRec["HasBinding"] varEnvRec fn)[0m
[32m+ 8326  [-]   : let bindingExists = __x37__[0m
[32m+ 8327  [[32mT[0m/[31mF[0m[32m]: if (= bindingExists false) ... else ...[0m
[32m+ 8328  [-]   : { ... }[0m
[32m+ 8329  [-]   : app __x38__ = (varEnvRec["CreateMutableBinding"] varEnvRec fn true)[0m
[32m+ 8330  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x38__) ... else ...[0m
[32m+ 8331  [[32mT[0m/[31mF[0m[32m]: if (= __x38__["Type"] CONST_normal) ... else ...[0m
[32m+ 8332  [-]   : __x38__ = __x38__["Value"][0m
[31m- 8333  [-]   : return __x38__[0m
[32m+ 8334  [-]   : {}[0m
[32m+ 8335  [-]   : let status = __x38__[0m
[32m+ 8336  [-]   : app __x39__ = (varEnvRec["InitializeBinding"] varEnvRec fn fo)[0m
[32m+ 8337  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x39__) ... else ...[0m
[32m+ 8338  [[32mT[0m/[31mF[0m[32m]: if (= __x39__["Type"] CONST_normal) ... else ...[0m
[32m+ 8339  [-]   : __x39__ = __x39__["Value"][0m
[31m- 8340  [-]   : return __x39__[0m
[32m+ 8341  [-]   : {}[0m
[32m+ 8342  [-]   : __x39__[0m
[31m- 8343  [-]   : { ... }[0m
[31m- 8344  [-]   : app __x40__ = (varEnvRec["SetMutableBinding"] varEnvRec fn fo false)[0m
[31m- 8345  [-]   : if (is-completion __x40__) ... else ...[0m
[31m- 8346  [-]   : if (= __x40__["Type"] CONST_normal) ... else ...[0m
[31m- 8347  [-]   : __x40__ = __x40__["Value"][0m
[31m- 8348  [-]   : return __x40__[0m
[31m- 8349  [-]   : {}[0m
[31m- 8350  [-]   : __x40__[0m
[32m+ 8351  [-]   : __x32__ = (+ __x32__ 1i)[0m
[32m+ 8352  [-]   : let __x41__ = declaredVarNames[0m
[32m+ 8353  [-]   : let __x42__ = 0i[0m
[32m+ 8354  [[32mT[0m/[32mT[0m[32m]: while (< __x42__ __x41__["length"]) { ... }[0m
[32m+ 8355  [-]   : { ... }[0m
[32m+ 8356  [-]   : let vn = __x41__[__x42__][0m
[32m+ 8357  [[31mF[0m/[32mT[0m[32m]: if (= (typeof varEnvRec) "GlobalEnvironmentRecord") ... else ...[0m
[31m- 8358  [-]   : { ... }[0m
[31m- 8359  [-]   : app __x43__ = (varEnvRec["CreateGlobalVarBinding"] varEnvRec vn true)[0m
[31m- 8360  [-]   : if (is-completion __x43__) ... else ...[0m
[31m- 8361  [-]   : if (= __x43__["Type"] CONST_normal) ... else ...[0m
[31m- 8362  [-]   : __x43__ = __x43__["Value"][0m
[31m- 8363  [-]   : return __x43__[0m
[31m- 8364  [-]   : {}[0m
[31m- 8365  [-]   : __x43__[0m
[32m+ 8366  [-]   : { ... }[0m
[32m+ 8367  [-]   : app __x44__ = (varEnvRec["HasBinding"] varEnvRec vn)[0m
[32m+ 8368  [-]   : let bindingExists = __x44__[0m
[32m+ 8369  [[32mT[0m/[31mF[0m[32m]: if (= bindingExists false) ... else ...[0m
[32m+ 8370  [-]   : { ... }[0m
[32m+ 8371  [-]   : app __x45__ = (varEnvRec["CreateMutableBinding"] varEnvRec vn true)[0m
[32m+ 8372  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x45__) ... else ...[0m
[32m+ 8373  [[32mT[0m/[31mF[0m[32m]: if (= __x45__["Type"] CONST_normal) ... else ...[0m
[32m+ 8374  [-]   : __x45__ = __x45__["Value"][0m
[31m- 8375  [-]   : return __x45__[0m
[32m+ 8376  [-]   : {}[0m
[32m+ 8377  [-]   : let status = __x45__[0m
[32m+ 8378  [-]   : app __x46__ = (varEnvRec["InitializeBinding"] varEnvRec vn undefined)[0m
[32m+ 8379  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x46__) ... else ...[0m
[32m+ 8380  [[32mT[0m/[31mF[0m[32m]: if (= __x46__["Type"] CONST_normal) ... else ...[0m
[32m+ 8381  [-]   : __x46__ = __x46__["Value"][0m
[31m- 8382  [-]   : return __x46__[0m
[32m+ 8383  [-]   : {}[0m
[32m+ 8384  [-]   : __x46__[0m
[31m- 8385  [-]   : {}[0m
[32m+ 8386  [-]   : __x42__ = (+ __x42__ 1i)[0m
[32m+ 8387  [-]   : app __x47__ = (NormalCompletion CONST_empty)[0m
[32m+ 8388  [-]   : app __x48__ = (WrapCompletion __x47__)[0m
[32m+ 8389  [-]   : return __x48__[0m

[33mGlobalDeclarationInstantiation[0m
[33m- Inst: 159 / 184 (86.41%)[0m
[33m- Cond: 57 / 70 (81.43%)[0m
[32m+ 17706 [-]   : { ... }[0m
[32m+ 17707 [-]   : let envRec = env["EnvironmentRecord"][0m
[32m+ 17708 [-]   : assert (= (typeof envRec) "GlobalEnvironmentRecord")[0m
[32m+ 17709 [-]   : access __x0__ = (script "LexicallyDeclaredNames")[0m
[32m+ 17710 [-]   : let lexNames = __x0__[0m
[32m+ 17711 [-]   : access __x1__ = (script "VarDeclaredNames")[0m
[32m+ 17712 [-]   : let varNames = __x1__[0m
[32m+ 17713 [-]   : let __x2__ = lexNames[0m
[32m+ 17714 [-]   : let __x3__ = 0i[0m
[32m+ 17715 [[32mT[0m/[32mT[0m[32m]: while (< __x3__ __x2__["length"]) { ... }[0m
[32m+ 17716 [-]   : { ... }[0m
[32m+ 17717 [-]   : let name = __x2__[__x3__][0m
[32m+ 17718 [-]   : app __x4__ = (envRec["HasVarDeclaration"] envRec name)[0m
[32m+ 17719 [[31mF[0m/[32mT[0m[32m]: if (= __x4__ true) ... else ...[0m
[31m- 17720 [-]   : { ... }[0m
[31m- 17721 [-]   : app __x5__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 17722 [-]   : return __x5__[0m
[32m+ 17723 [-]   : {}[0m
[32m+ 17724 [-]   : app __x6__ = (envRec["HasLexicalDeclaration"] envRec name)[0m
[32m+ 17725 [[31mF[0m/[32mT[0m[32m]: if (= __x6__ true) ... else ...[0m
[31m- 17726 [-]   : { ... }[0m
[31m- 17727 [-]   : app __x7__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 17728 [-]   : return __x7__[0m
[32m+ 17729 [-]   : {}[0m
[32m+ 17730 [-]   : app __x8__ = (envRec["HasRestrictedGlobalProperty"] envRec name)[0m
[32m+ 17731 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x8__) ... else ...[0m
[32m+ 17732 [[32mT[0m/[31mF[0m[32m]: if (= __x8__["Type"] CONST_normal) ... else ...[0m
[32m+ 17733 [-]   : __x8__ = __x8__["Value"][0m
[31m- 17734 [-]   : return __x8__[0m
[32m+ 17735 [-]   : {}[0m
[32m+ 17736 [-]   : let hasRestrictedGlobal = __x8__[0m
[32m+ 17737 [[31mF[0m/[32mT[0m[32m]: if (= hasRestrictedGlobal true) ... else ...[0m
[31m- 17738 [-]   : { ... }[0m
[31m- 17739 [-]   : app __x9__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 17740 [-]   : return __x9__[0m
[32m+ 17741 [-]   : {}[0m
[32m+ 17742 [-]   : __x3__ = (+ __x3__ 1i)[0m
[32m+ 17743 [-]   : let __x10__ = varNames[0m
[32m+ 17744 [-]   : let __x11__ = 0i[0m
[32m+ 17745 [[32mT[0m/[32mT[0m[32m]: while (< __x11__ __x10__["length"]) { ... }[0m
[32m+ 17746 [-]   : { ... }[0m
[32m+ 17747 [-]   : let name = __x10__[__x11__][0m
[32m+ 17748 [-]   : app __x12__ = (envRec["HasLexicalDeclaration"] envRec name)[0m
[32m+ 17749 [[31mF[0m/[32mT[0m[32m]: if (= __x12__ true) ... else ...[0m
[31m- 17750 [-]   : { ... }[0m
[31m- 17751 [-]   : app __x13__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_SyntaxErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 17752 [-]   : return __x13__[0m
[32m+ 17753 [-]   : {}[0m
[32m+ 17754 [-]   : __x11__ = (+ __x11__ 1i)[0m
[32m+ 17755 [-]   : access __x14__ = (script "VarScopedDeclarations")[0m
[32m+ 17756 [-]   : let varDeclarations = __x14__[0m
[32m+ 17757 [-]   : let functionsToInitialize = (new [])[0m
[32m+ 17758 [-]   : let declaredFunctionNames = (new [])[0m
[32m+ 17759 [-]   : let __x15__ = varDeclarations[0m
[32m+ 17760 [-]   : let __x16__ = __x15__["length"][0m
[32m+ 17761 [[32mT[0m/[32mT[0m[32m]: while (< 0i __x16__) { ... }[0m
[32m+ 17762 [-]   : { ... }[0m
[32m+ 17763 [-]   : __x16__ = (- __x16__ 1i)[0m
[32m+ 17764 [-]   : let d = __x15__[__x16__][0m
[32m+ 17765 [[32mT[0m/[32mT[0m[32m]: if (! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))) ... else ...[0m
[32m+ 17766 [-]   : { ... }[0m
[32m+ 17767 [-]   : assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))[0m
[32m+ 17768 [-]   : access __x17__ = (d "BoundNames")[0m
[32m+ 17769 [-]   : let fn = __x17__[0i][0m
[32m+ 17770 [[32mT[0m/[32mT[0m[32m]: if (! (contains declaredFunctionNames fn)) ... else ...[0m
[32m+ 17771 [-]   : { ... }[0m
[32m+ 17772 [-]   : app __x18__ = (envRec["CanDeclareGlobalFunction"] envRec fn)[0m
[32m+ 17773 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x18__) ... else ...[0m
[32m+ 17774 [[32mT[0m/[31mF[0m[32m]: if (= __x18__["Type"] CONST_normal) ... else ...[0m
[32m+ 17775 [-]   : __x18__ = __x18__["Value"][0m
[31m- 17776 [-]   : return __x18__[0m
[32m+ 17777 [-]   : {}[0m
[32m+ 17778 [-]   : let fnDefinable = __x18__[0m
[32m+ 17779 [[31mF[0m/[32mT[0m[32m]: if (= fnDefinable false) ... else ...[0m
[31m- 17780 [-]   : { ... }[0m
[31m- 17781 [-]   : app __x19__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 17782 [-]   : return __x19__[0m
[32m+ 17783 [-]   : {}[0m
[32m+ 17784 [-]   : append fn -> declaredFunctionNames[0m
[32m+ 17785 [-]   : prepend d -> functionsToInitialize[0m
[32m+ 17786 [-]   : {}[0m
[32m+ 17787 [-]   : {}[0m
[32m+ 17788 [-]   : let declaredVarNames = (new [])[0m
[32m+ 17789 [-]   : let __x20__ = varDeclarations[0m
[32m+ 17790 [-]   : let __x21__ = 0i[0m
[32m+ 17791 [[32mT[0m/[32mT[0m[32m]: while (< __x21__ __x20__["length"]) { ... }[0m
[32m+ 17792 [-]   : { ... }[0m
[32m+ 17793 [-]   : let d = __x20__[__x21__][0m
[32m+ 17794 [[32mT[0m/[32mT[0m[32m]: if (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier)) ... else ...[0m
[32m+ 17795 [-]   : { ... }[0m
[32m+ 17796 [-]   : access __x22__ = (d "BoundNames")[0m
[32m+ 17797 [-]   : let __x23__ = __x22__[0m
[32m+ 17798 [-]   : let __x24__ = 0i[0m
[32m+ 17799 [[32mT[0m/[32mT[0m[32m]: while (< __x24__ __x23__["length"]) { ... }[0m
[32m+ 17800 [-]   : { ... }[0m
[32m+ 17801 [-]   : let vn = __x23__[__x24__][0m
[32m+ 17802 [[32mT[0m/[32mT[0m[32m]: if (! (contains declaredFunctionNames vn)) ... else ...[0m
[32m+ 17803 [-]   : { ... }[0m
[32m+ 17804 [-]   : app __x25__ = (envRec["CanDeclareGlobalVar"] envRec vn)[0m
[32m+ 17805 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x25__) ... else ...[0m
[32m+ 17806 [[32mT[0m/[31mF[0m[32m]: if (= __x25__["Type"] CONST_normal) ... else ...[0m
[32m+ 17807 [-]   : __x25__ = __x25__["Value"][0m
[31m- 17808 [-]   : return __x25__[0m
[32m+ 17809 [-]   : {}[0m
[32m+ 17810 [-]   : let vnDefinable = __x25__[0m
[32m+ 17811 [[31mF[0m/[32mT[0m[32m]: if (= vnDefinable false) ... else ...[0m
[31m- 17812 [-]   : { ... }[0m
[31m- 17813 [-]   : app __x26__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[31m- 17814 [-]   : return __x26__[0m
[32m+ 17815 [-]   : {}[0m
[32m+ 17816 [[32mT[0m/[32mT[0m[32m]: if (! (contains declaredVarNames vn)) ... else ...[0m
[32m+ 17817 [-]   : append vn -> declaredVarNames[0m
[32m+ 17818 [-]   : {}[0m
[32m+ 17819 [-]   : {}[0m
[32m+ 17820 [-]   : __x24__ = (+ __x24__ 1i)[0m
[32m+ 17821 [-]   : {}[0m
[32m+ 17822 [-]   : __x21__ = (+ __x21__ 1i)[0m
[32m+ 17823 [-]   : access __x27__ = (script "LexicallyScopedDeclarations")[0m
[32m+ 17824 [-]   : let lexDeclarations = __x27__[0m
[32m+ 17825 [-]   : let __x28__ = lexDeclarations[0m
[32m+ 17826 [-]   : let __x29__ = 0i[0m
[32m+ 17827 [[32mT[0m/[32mT[0m[32m]: while (< __x29__ __x28__["length"]) { ... }[0m
[32m+ 17828 [-]   : { ... }[0m
[32m+ 17829 [-]   : let d = __x28__[__x29__][0m
[32m+ 17830 [-]   : access __x30__ = (d "BoundNames")[0m
[32m+ 17831 [-]   : let __x31__ = __x30__[0m
[32m+ 17832 [-]   : let __x32__ = 0i[0m
[32m+ 17833 [[32mT[0m/[32mT[0m[32m]: while (< __x32__ __x31__["length"]) { ... }[0m
[32m+ 17834 [-]   : { ... }[0m
[32m+ 17835 [-]   : let dn = __x31__[__x32__][0m
[32m+ 17836 [-]   : access __x33__ = (d "IsConstantDeclaration")[0m
[32m+ 17837 [[32mT[0m/[32mT[0m[32m]: if (= __x33__ true) ... else ...[0m
[32m+ 17838 [-]   : { ... }[0m
[32m+ 17839 [-]   : app __x34__ = (envRec["CreateImmutableBinding"] envRec dn true)[0m
[32m+ 17840 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x34__) ... else ...[0m
[32m+ 17841 [[32mT[0m/[31mF[0m[32m]: if (= __x34__["Type"] CONST_normal) ... else ...[0m
[32m+ 17842 [-]   : __x34__ = __x34__["Value"][0m
[31m- 17843 [-]   : return __x34__[0m
[32m+ 17844 [-]   : {}[0m
[32m+ 17845 [-]   : __x34__[0m
[32m+ 17846 [-]   : { ... }[0m
[32m+ 17847 [-]   : app __x35__ = (envRec["CreateMutableBinding"] envRec dn false)[0m
[32m+ 17848 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x35__) ... else ...[0m
[32m+ 17849 [[32mT[0m/[31mF[0m[32m]: if (= __x35__["Type"] CONST_normal) ... else ...[0m
[32m+ 17850 [-]   : __x35__ = __x35__["Value"][0m
[31m- 17851 [-]   : return __x35__[0m
[32m+ 17852 [-]   : {}[0m
[32m+ 17853 [-]   : __x35__[0m
[32m+ 17854 [-]   : __x32__ = (+ __x32__ 1i)[0m
[32m+ 17855 [-]   : __x29__ = (+ __x29__ 1i)[0m
[32m+ 17856 [-]   : let __x36__ = functionsToInitialize[0m
[32m+ 17857 [-]   : let __x37__ = 0i[0m
[32m+ 17858 [[32mT[0m/[32mT[0m[32m]: while (< __x37__ __x36__["length"]) { ... }[0m
[32m+ 17859 [-]   : { ... }[0m
[32m+ 17860 [-]   : let f = __x36__[__x37__][0m
[32m+ 17861 [-]   : access __x38__ = (f "BoundNames")[0m
[32m+ 17862 [-]   : let fn = __x38__[0i][0m
[32m+ 17863 [-]   : access __x39__ = (f "InstantiateFunctionObject")[0m
[32m+ 17864 [-]   : app __x40__ = (__x39__ env)[0m
[32m+ 17865 [-]   : let fo = __x40__[0m
[32m+ 17866 [-]   : app __x41__ = (envRec["CreateGlobalFunctionBinding"] envRec fn fo false)[0m
[32m+ 17867 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x41__) ... else ...[0m
[32m+ 17868 [[32mT[0m/[31mF[0m[32m]: if (= __x41__["Type"] CONST_normal) ... else ...[0m
[32m+ 17869 [-]   : __x41__ = __x41__["Value"][0m
[31m- 17870 [-]   : return __x41__[0m
[32m+ 17871 [-]   : {}[0m
[32m+ 17872 [-]   : __x41__[0m
[32m+ 17873 [-]   : __x37__ = (+ __x37__ 1i)[0m
[32m+ 17874 [-]   : let __x42__ = declaredVarNames[0m
[32m+ 17875 [-]   : let __x43__ = 0i[0m
[32m+ 17876 [[32mT[0m/[32mT[0m[32m]: while (< __x43__ __x42__["length"]) { ... }[0m
[32m+ 17877 [-]   : { ... }[0m
[32m+ 17878 [-]   : let vn = __x42__[__x43__][0m
[32m+ 17879 [-]   : app __x44__ = (envRec["CreateGlobalVarBinding"] envRec vn false)[0m
[32m+ 17880 [[32mT[0m/[32mT[0m[32m]: if (is-completion __x44__) ... else ...[0m
[32m+ 17881 [[32mT[0m/[31mF[0m[32m]: if (= __x44__["Type"] CONST_normal) ... else ...[0m
[32m+ 17882 [-]   : __x44__ = __x44__["Value"][0m
[31m- 17883 [-]   : return __x44__[0m
[32m+ 17884 [-]   : {}[0m
[32m+ 17885 [-]   : __x44__[0m
[32m+ 17886 [-]   : __x43__ = (+ __x43__ 1i)[0m
[32m+ 17887 [-]   : app __x45__ = (NormalCompletion CONST_empty)[0m
[32m+ 17888 [-]   : app __x46__ = (WrapCompletion __x45__)[0m
[32m+ 17889 [-]   : return __x46__[0m

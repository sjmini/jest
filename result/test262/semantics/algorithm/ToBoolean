[32mToBoolean[0m
[32m- Inst: 29 / 29 (100.00%)[0m
[32m- Cond: 18 / 18 (100.00%)[0m
[32m+ 23007 [-]   : { ... }[0m
[32m+ 23008 [-]   : app atype = (Type argument)[0m
[32m+ 23009 [[32mT[0m/[32mT[0m[32m]: if (= atype "Undefined") ... else ...[0m
[32m+ 23010 [-]   : { ... }[0m
[32m+ 23011 [-]   : return false[0m
[32m+ 23012 [[32mT[0m/[32mT[0m[32m]: if (= atype "Null") ... else ...[0m
[32m+ 23013 [-]   : { ... }[0m
[32m+ 23014 [-]   : return false[0m
[32m+ 23015 [[32mT[0m/[32mT[0m[32m]: if (= atype "Boolean") ... else ...[0m
[32m+ 23016 [-]   : { ... }[0m
[32m+ 23017 [-]   : return argument[0m
[32m+ 23018 [[32mT[0m/[32mT[0m[32m]: if (= atype "Number") ... else ...[0m
[32m+ 23019 [-]   : { ... }[0m
[32m+ 23020 [[32mT[0m/[32mT[0m[32m]: if (|| (|| (= argument 0.0) (= argument (- 0.0))) (= argument NaN)) ... else ...[0m
[32m+ 23021 [-]   : return false[0m
[32m+ 23022 [-]   : return true[0m
[32m+ 23023 [[32mT[0m/[32mT[0m[32m]: if (= atype "String") ... else ...[0m
[32m+ 23024 [-]   : { ... }[0m
[32m+ 23025 [[32mT[0m/[32mT[0m[32m]: if (= argument "") ... else ...[0m
[32m+ 23026 [-]   : return false[0m
[32m+ 23027 [-]   : return true[0m
[32m+ 23028 [[32mT[0m/[32mT[0m[32m]: if (= atype "Symbol") ... else ...[0m
[32m+ 23029 [-]   : { ... }[0m
[32m+ 23030 [-]   : return true[0m
[32m+ 23031 [[32mT[0m/[32mT[0m[32m]: if (= atype "BigInt") ... else ...[0m
[32m+ 23032 [-]   : { ... }[0m
[32m+ 23033 [-]   : return (! (= argument 0n))[0m
[32m+ 23034 [-]   : { ... }[0m
[32m+ 23035 [-]   : return true[0m

[33mFunctionDeclarationInstantiation[0m
[33m- Inst: 204 / 265 (76.98%)[0m
[33m- Cond: 66 / 102 (64.71%)[0m
[32m+ 9126  [-]   : { ... }[0m
[32m+ 9127  [-]   : let calleeContext = GLOBAL_context[0m
[32m+ 9128  [-]   : let code = func["ECMAScriptCode"][0m
[32m+ 9129  [-]   : let strict = func["Strict"][0m
[32m+ 9130  [-]   : let formals = func["FormalParameters"][0m
[32m+ 9131  [-]   : access __x0__ = (formals "BoundNames")[0m
[32m+ 9132  [-]   : let parameterNames = __x0__[0m
[32m+ 9133  [-]   : app __x1__ = (IsDuplicate parameterNames)[0m
[32m+ 9134  [[31mF[0m/[32mT[0m[32m]: if __x1__ ... else ...[0m
[31m- 9135  [-]   : let hasDuplicates = true[0m
[32m+ 9136  [-]   : let hasDuplicates = false[0m
[32m+ 9137  [-]   : access __x2__ = (formals "IsSimpleParameterList")[0m
[32m+ 9138  [-]   : let simpleParameterList = __x2__[0m
[32m+ 9139  [-]   : access __x3__ = (formals "ContainsExpression")[0m
[32m+ 9140  [-]   : let hasParameterExpressions = __x3__[0m
[32m+ 9141  [-]   : access __x4__ = (code "VarDeclaredNames")[0m
[32m+ 9142  [-]   : let varNames = __x4__[0m
[32m+ 9143  [-]   : access __x5__ = (code "VarScopedDeclarations")[0m
[32m+ 9144  [-]   : let varDeclarations = __x5__[0m
[32m+ 9145  [-]   : access __x6__ = (code "LexicallyDeclaredNames")[0m
[32m+ 9146  [-]   : let lexicalNames = __x6__[0m
[32m+ 9147  [-]   : let functionNames = (new [])[0m
[32m+ 9148  [-]   : let functionsToInitialize = (new [])[0m
[32m+ 9149  [-]   : let __x7__ = varDeclarations[0m
[32m+ 9150  [-]   : let __x8__ = __x7__["length"][0m
[32m+ 9151  [[32mT[0m/[32mT[0m[32m]: while (< 0i __x8__) { ... }[0m
[32m+ 9152  [-]   : { ... }[0m
[32m+ 9153  [-]   : __x8__ = (- __x8__ 1i)[0m
[32m+ 9154  [-]   : let d = __x7__[__x8__][0m
[32m+ 9155  [[32mT[0m/[32mT[0m[32m]: if (! (|| (|| (is-instance-of d VariableDeclaration) (is-instance-of d ForBinding)) (is-instance-of d BindingIdentifier))) ... else ...[0m
[32m+ 9156  [-]   : { ... }[0m
[32m+ 9157  [-]   : assert (|| (|| (|| (is-instance-of d FunctionDeclaration) (is-instance-of d GeneratorDeclaration)) (is-instance-of d AsyncFunctionDeclaration)) (is-instance-of d AsyncGeneratorDeclaration))[0m
[32m+ 9158  [-]   : access __x9__ = (d "BoundNames")[0m
[32m+ 9159  [-]   : let fn = __x9__[0i][0m
[32m+ 9160  [[32mT[0m/[31mF[0m[32m]: if (! (contains functionNames fn)) ... else ...[0m
[32m+ 9161  [-]   : { ... }[0m
[32m+ 9162  [-]   : prepend fn -> functionNames[0m
[32m+ 9163  [-]   : prepend d -> functionsToInitialize[0m
[31m- 9164  [-]   : {}[0m
[32m+ 9165  [-]   : {}[0m
[32m+ 9166  [-]   : let argumentsObjectNeeded = true[0m
[32m+ 9167  [[32mT[0m/[32mT[0m[32m]: if (= func["ThisMode"] CONST_lexical) ... else ...[0m
[32m+ 9168  [-]   : argumentsObjectNeeded = false[0m
[32m+ 9169  [[31mF[0m/[32mT[0m[32m]: if (contains parameterNames "arguments") ... else ...[0m
[31m- 9170  [-]   : argumentsObjectNeeded = false[0m
[32m+ 9171  [[32mT[0m/[32mT[0m[32m]: if (= hasParameterExpressions false) ... else ...[0m
[32m+ 9172  [[31mF[0m/[32mT[0m[32m]: if (|| (contains functionNames "arguments") (contains lexicalNames "arguments")) ... else ...[0m
[31m- 9173  [-]   : argumentsObjectNeeded = false[0m
[32m+ 9174  [-]   : {}[0m
[32m+ 9175  [-]   : {}[0m
[32m+ 9176  [[32mT[0m/[31mF[0m[32m]: if (|| (= strict true) (= hasParameterExpressions false)) ... else ...[0m
[32m+ 9177  [-]   : { ... }[0m
[32m+ 9178  [-]   : access __x10__ = (calleeContext "LexicalEnvironment")[0m
[32m+ 9179  [-]   : let env = __x10__[0m
[32m+ 9180  [-]   : let envRec = env["EnvironmentRecord"][0m
[31m- 9181  [-]   : { ... }[0m
[31m- 9182  [-]   : access __x11__ = (calleeContext "LexicalEnvironment")[0m
[31m- 9183  [-]   : let calleeEnv = __x11__[0m
[31m- 9184  [-]   : app __x12__ = (NewDeclarativeEnvironment calleeEnv)[0m
[31m- 9185  [-]   : let env = __x12__[0m
[31m- 9186  [-]   : let envRec = env["EnvironmentRecord"][0m
[31m- 9187  [-]   : access __x13__ = (calleeContext "VariableEnvironment")[0m
[31m- 9188  [-]   : assert (= __x13__ calleeEnv)[0m
[31m- 9189  [-]   : calleeContext["LexicalEnvironment"] = env[0m
[32m+ 9190  [-]   : let __x14__ = parameterNames[0m
[32m+ 9191  [-]   : let __x15__ = 0i[0m
[32m+ 9192  [[32mT[0m/[32mT[0m[32m]: while (< __x15__ __x14__["length"]) { ... }[0m
[32m+ 9193  [-]   : { ... }[0m
[32m+ 9194  [-]   : let paramName = __x14__[__x15__][0m
[32m+ 9195  [-]   : app __x16__ = (envRec["HasBinding"] envRec paramName)[0m
[32m+ 9196  [-]   : let alreadyDeclared = __x16__[0m
[32m+ 9197  [[32mT[0m/[31mF[0m[32m]: if (= alreadyDeclared false) ... else ...[0m
[32m+ 9198  [-]   : { ... }[0m
[32m+ 9199  [-]   : app __x17__ = (envRec["CreateMutableBinding"] envRec paramName false)[0m
[32m+ 9200  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x17__) ... else ...[0m
[32m+ 9201  [[32mT[0m/[31mF[0m[32m]: if (= __x17__["Type"] CONST_normal) ... else ...[0m
[32m+ 9202  [-]   : __x17__ = __x17__["Value"][0m
[31m- 9203  [-]   : return __x17__[0m
[32m+ 9204  [-]   : {}[0m
[32m+ 9205  [-]   : __x17__[0m
[32m+ 9206  [[31mF[0m/[32mT[0m[32m]: if (= hasDuplicates true) ... else ...[0m
[31m- 9207  [-]   : { ... }[0m
[31m- 9208  [-]   : app __x18__ = (envRec["InitializeBinding"] envRec paramName undefined)[0m
[31m- 9209  [-]   : if (is-completion __x18__) ... else ...[0m
[31m- 9210  [-]   : if (= __x18__["Type"] CONST_normal) ... else ...[0m
[31m- 9211  [-]   : __x18__ = __x18__["Value"][0m
[31m- 9212  [-]   : return __x18__[0m
[31m- 9213  [-]   : {}[0m
[31m- 9214  [-]   : __x18__[0m
[32m+ 9215  [-]   : {}[0m
[31m- 9216  [-]   : {}[0m
[32m+ 9217  [-]   : __x15__ = (+ __x15__ 1i)[0m
[32m+ 9218  [[32mT[0m/[32mT[0m[32m]: if (= argumentsObjectNeeded true) ... else ...[0m
[32m+ 9219  [-]   : { ... }[0m
[32m+ 9220  [[32mT[0m/[31mF[0m[32m]: if (|| (= strict true) (= simpleParameterList false)) ... else ...[0m
[32m+ 9221  [-]   : { ... }[0m
[32m+ 9222  [-]   : app __x19__ = (CreateUnmappedArgumentsObject argumentsList)[0m
[32m+ 9223  [-]   : let ao = __x19__[0m
[31m- 9224  [-]   : { ... }[0m
[31m- 9225  [-]   : app __x20__ = (CreateMappedArgumentsObject func formals argumentsList envRec)[0m
[31m- 9226  [-]   : let ao = __x20__[0m
[32m+ 9227  [[32mT[0m/[31mF[0m[32m]: if (= strict true) ... else ...[0m
[32m+ 9228  [-]   : { ... }[0m
[32m+ 9229  [-]   : app __x21__ = (envRec["CreateImmutableBinding"] envRec "arguments" false)[0m
[32m+ 9230  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x21__) ... else ...[0m
[32m+ 9231  [[32mT[0m/[31mF[0m[32m]: if (= __x21__["Type"] CONST_normal) ... else ...[0m
[32m+ 9232  [-]   : __x21__ = __x21__["Value"][0m
[31m- 9233  [-]   : return __x21__[0m
[32m+ 9234  [-]   : {}[0m
[32m+ 9235  [-]   : __x21__[0m
[31m- 9236  [-]   : { ... }[0m
[31m- 9237  [-]   : app __x22__ = (envRec["CreateMutableBinding"] envRec "arguments" false)[0m
[31m- 9238  [-]   : if (is-completion __x22__) ... else ...[0m
[31m- 9239  [-]   : if (= __x22__["Type"] CONST_normal) ... else ...[0m
[31m- 9240  [-]   : __x22__ = __x22__["Value"][0m
[31m- 9241  [-]   : return __x22__[0m
[31m- 9242  [-]   : {}[0m
[31m- 9243  [-]   : __x22__[0m
[32m+ 9244  [-]   : app __x23__ = (envRec["InitializeBinding"] envRec "arguments" ao)[0m
[32m+ 9245  [-]   : __x23__[0m
[32m+ 9246  [-]   : let __x24__ = (copy-obj parameterNames)[0m
[32m+ 9247  [-]   : append "arguments" -> __x24__[0m
[32m+ 9248  [-]   : let parameterBindings = __x24__[0m
[32m+ 9249  [-]   : let parameterBindings = parameterNames[0m
[32m+ 9250  [-]   : app __x25__ = (CreateListIteratorRecord argumentsList)[0m
[32m+ 9251  [-]   : let iteratorRecord = __x25__[0m
[32m+ 9252  [[31mF[0m/[32mT[0m[32m]: if (= hasDuplicates true) ... else ...[0m
[31m- 9253  [-]   : { ... }[0m
[31m- 9254  [-]   : access __x26__ = (formals "IteratorBindingInitialization")[0m
[31m- 9255  [-]   : app __x27__ = (__x26__ iteratorRecord undefined)[0m
[31m- 9256  [-]   : if (is-completion __x27__) ... else ...[0m
[31m- 9257  [-]   : if (= __x27__["Type"] CONST_normal) ... else ...[0m
[31m- 9258  [-]   : __x27__ = __x27__["Value"][0m
[31m- 9259  [-]   : return __x27__[0m
[31m- 9260  [-]   : {}[0m
[31m- 9261  [-]   : __x27__[0m
[32m+ 9262  [-]   : { ... }[0m
[32m+ 9263  [-]   : access __x28__ = (formals "IteratorBindingInitialization")[0m
[32m+ 9264  [-]   : app __x29__ = (__x28__ iteratorRecord env)[0m
[32m+ 9265  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x29__) ... else ...[0m
[32m+ 9266  [[32mT[0m/[32mT[0m[32m]: if (= __x29__["Type"] CONST_normal) ... else ...[0m
[32m+ 9267  [-]   : __x29__ = __x29__["Value"][0m
[32m+ 9268  [-]   : return __x29__[0m
[32m+ 9269  [-]   : {}[0m
[32m+ 9270  [-]   : __x29__[0m
[32m+ 9271  [[32mT[0m/[32mT[0m[32m]: if (= hasParameterExpressions false) ... else ...[0m
[32m+ 9272  [-]   : { ... }[0m
[32m+ 9273  [-]   : let instantiatedVarNames = (copy-obj parameterBindings)[0m
[32m+ 9274  [-]   : let __x30__ = varNames[0m
[32m+ 9275  [-]   : let __x31__ = 0i[0m
[32m+ 9276  [[32mT[0m/[32mT[0m[32m]: while (< __x31__ __x30__["length"]) { ... }[0m
[32m+ 9277  [-]   : { ... }[0m
[32m+ 9278  [-]   : let n = __x30__[__x31__][0m
[32m+ 9279  [[32mT[0m/[32mT[0m[32m]: if (! (contains instantiatedVarNames n)) ... else ...[0m
[32m+ 9280  [-]   : { ... }[0m
[32m+ 9281  [-]   : append n -> instantiatedVarNames[0m
[32m+ 9282  [-]   : app __x32__ = (envRec["CreateMutableBinding"] envRec n false)[0m
[32m+ 9283  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x32__) ... else ...[0m
[32m+ 9284  [[32mT[0m/[31mF[0m[32m]: if (= __x32__["Type"] CONST_normal) ... else ...[0m
[32m+ 9285  [-]   : __x32__ = __x32__["Value"][0m
[31m- 9286  [-]   : return __x32__[0m
[32m+ 9287  [-]   : {}[0m
[32m+ 9288  [-]   : __x32__[0m
[32m+ 9289  [-]   : app __x33__ = (envRec["InitializeBinding"] envRec n undefined)[0m
[32m+ 9290  [-]   : __x33__[0m
[32m+ 9291  [-]   : {}[0m
[32m+ 9292  [-]   : __x31__ = (+ __x31__ 1i)[0m
[32m+ 9293  [-]   : let varEnv = env[0m
[32m+ 9294  [-]   : let varEnvRec = envRec[0m
[32m+ 9295  [-]   : { ... }[0m
[32m+ 9296  [-]   : app __x34__ = (NewDeclarativeEnvironment env)[0m
[32m+ 9297  [-]   : let varEnv = __x34__[0m
[32m+ 9298  [-]   : let varEnvRec = varEnv["EnvironmentRecord"][0m
[32m+ 9299  [-]   : calleeContext["VariableEnvironment"] = varEnv[0m
[32m+ 9300  [-]   : let instantiatedVarNames = (new [])[0m
[32m+ 9301  [-]   : let __x35__ = varNames[0m
[32m+ 9302  [-]   : let __x36__ = 0i[0m
[32m+ 9303  [[32mT[0m/[32mT[0m[32m]: while (< __x36__ __x35__["length"]) { ... }[0m
[32m+ 9304  [-]   : { ... }[0m
[32m+ 9305  [-]   : let n = __x35__[__x36__][0m
[32m+ 9306  [[32mT[0m/[31mF[0m[32m]: if (! (contains instantiatedVarNames n)) ... else ...[0m
[32m+ 9307  [-]   : { ... }[0m
[32m+ 9308  [-]   : append n -> instantiatedVarNames[0m
[32m+ 9309  [-]   : app __x37__ = (varEnvRec["CreateMutableBinding"] varEnvRec n false)[0m
[32m+ 9310  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x37__) ... else ...[0m
[32m+ 9311  [[32mT[0m/[31mF[0m[32m]: if (= __x37__["Type"] CONST_normal) ... else ...[0m
[32m+ 9312  [-]   : __x37__ = __x37__["Value"][0m
[31m- 9313  [-]   : return __x37__[0m
[32m+ 9314  [-]   : {}[0m
[32m+ 9315  [-]   : __x37__[0m
[32m+ 9316  [[32mT[0m/[31mF[0m[32m]: if (|| (! (contains parameterBindings n)) (contains functionNames n)) ... else ...[0m
[32m+ 9317  [-]   : let initialValue = undefined[0m
[31m- 9318  [-]   : { ... }[0m
[31m- 9319  [-]   : app __x38__ = (envRec["GetBindingValue"] envRec n false)[0m
[31m- 9320  [-]   : if (is-completion __x38__) ... else ...[0m
[31m- 9321  [-]   : if (= __x38__["Type"] CONST_normal) ... else ...[0m
[31m- 9322  [-]   : __x38__ = __x38__["Value"][0m
[31m- 9323  [-]   : return __x38__[0m
[31m- 9324  [-]   : {}[0m
[31m- 9325  [-]   : let initialValue = __x38__[0m
[32m+ 9326  [-]   : app __x39__ = (varEnvRec["InitializeBinding"] varEnvRec n initialValue)[0m
[32m+ 9327  [-]   : __x39__[0m
[31m- 9328  [-]   : {}[0m
[32m+ 9329  [-]   : __x36__ = (+ __x36__ 1i)[0m
[32m+ 9330  [[31mF[0m/[32mT[0m[32m]: if (= strict false) ... else ...[0m
[31m- 9331  [-]   : { ... }[0m
[31m- 9332  [-]   : app __x40__ = (NewDeclarativeEnvironment varEnv)[0m
[31m- 9333  [-]   : let lexEnv = __x40__[0m
[32m+ 9334  [-]   : let lexEnv = varEnv[0m
[32m+ 9335  [-]   : let lexEnvRec = lexEnv["EnvironmentRecord"][0m
[32m+ 9336  [-]   : calleeContext["LexicalEnvironment"] = lexEnv[0m
[32m+ 9337  [-]   : access __x41__ = (code "LexicallyScopedDeclarations")[0m
[32m+ 9338  [-]   : let lexDeclarations = __x41__[0m
[32m+ 9339  [-]   : let __x42__ = lexDeclarations[0m
[32m+ 9340  [-]   : let __x43__ = 0i[0m
[32m+ 9341  [[32mT[0m/[32mT[0m[32m]: while (< __x43__ __x42__["length"]) { ... }[0m
[32m+ 9342  [-]   : { ... }[0m
[32m+ 9343  [-]   : let d = __x42__[__x43__][0m
[32m+ 9344  [-]   : access __x44__ = (d "BoundNames")[0m
[32m+ 9345  [-]   : let __x45__ = __x44__[0m
[32m+ 9346  [-]   : let __x46__ = 0i[0m
[32m+ 9347  [[32mT[0m/[32mT[0m[32m]: while (< __x46__ __x45__["length"]) { ... }[0m
[32m+ 9348  [-]   : { ... }[0m
[32m+ 9349  [-]   : let dn = __x45__[__x46__][0m
[32m+ 9350  [-]   : access __x47__ = (d "IsConstantDeclaration")[0m
[32m+ 9351  [[32mT[0m/[32mT[0m[32m]: if (= __x47__ true) ... else ...[0m
[32m+ 9352  [-]   : { ... }[0m
[32m+ 9353  [-]   : app __x48__ = (lexEnvRec["CreateImmutableBinding"] lexEnvRec dn true)[0m
[32m+ 9354  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x48__) ... else ...[0m
[32m+ 9355  [[32mT[0m/[31mF[0m[32m]: if (= __x48__["Type"] CONST_normal) ... else ...[0m
[32m+ 9356  [-]   : __x48__ = __x48__["Value"][0m
[31m- 9357  [-]   : return __x48__[0m
[32m+ 9358  [-]   : {}[0m
[32m+ 9359  [-]   : __x48__[0m
[32m+ 9360  [-]   : { ... }[0m
[32m+ 9361  [-]   : app __x49__ = (lexEnvRec["CreateMutableBinding"] lexEnvRec dn false)[0m
[32m+ 9362  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x49__) ... else ...[0m
[32m+ 9363  [[32mT[0m/[31mF[0m[32m]: if (= __x49__["Type"] CONST_normal) ... else ...[0m
[32m+ 9364  [-]   : __x49__ = __x49__["Value"][0m
[31m- 9365  [-]   : return __x49__[0m
[32m+ 9366  [-]   : {}[0m
[32m+ 9367  [-]   : __x49__[0m
[32m+ 9368  [-]   : __x46__ = (+ __x46__ 1i)[0m
[32m+ 9369  [-]   : __x43__ = (+ __x43__ 1i)[0m
[32m+ 9370  [-]   : let __x50__ = functionsToInitialize[0m
[32m+ 9371  [-]   : let __x51__ = 0i[0m
[32m+ 9372  [[32mT[0m/[32mT[0m[32m]: while (< __x51__ __x50__["length"]) { ... }[0m
[32m+ 9373  [-]   : { ... }[0m
[32m+ 9374  [-]   : let f = __x50__[__x51__][0m
[32m+ 9375  [-]   : access __x52__ = (f "BoundNames")[0m
[32m+ 9376  [-]   : let fn = __x52__[0i][0m
[32m+ 9377  [-]   : access __x53__ = (f "InstantiateFunctionObject")[0m
[32m+ 9378  [-]   : app __x54__ = (__x53__ lexEnv)[0m
[32m+ 9379  [-]   : let fo = __x54__[0m
[32m+ 9380  [-]   : app __x55__ = (varEnvRec["SetMutableBinding"] varEnvRec fn fo false)[0m
[32m+ 9381  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x55__) ... else ...[0m
[32m+ 9382  [[32mT[0m/[31mF[0m[32m]: if (= __x55__["Type"] CONST_normal) ... else ...[0m
[32m+ 9383  [-]   : __x55__ = __x55__["Value"][0m
[31m- 9384  [-]   : return __x55__[0m
[32m+ 9385  [-]   : {}[0m
[32m+ 9386  [-]   : __x55__[0m
[32m+ 9387  [-]   : __x51__ = (+ __x51__ 1i)[0m
[32m+ 9388  [-]   : app __x56__ = (NormalCompletion CONST_empty)[0m
[32m+ 9389  [-]   : app __x57__ = (WrapCompletion __x56__)[0m
[32m+ 9390  [-]   : return __x57__[0m

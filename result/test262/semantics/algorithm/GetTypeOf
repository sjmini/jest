[32mGetTypeOf[0m
[32m- Inst: 20 / 20 (100.00%)[0m
[32m- Cond: 16 / 16 (100.00%)[0m
[32m+ 17612 [-]   : { ... }[0m
[32m+ 17613 [-]   : let t = (typeof argument)[0m
[32m+ 17614 [[32mT[0m/[32mT[0m[32m]: if (= t "Undefined") ... else ...[0m
[32m+ 17615 [-]   : return "undefined"[0m
[32m+ 17616 [[32mT[0m/[32mT[0m[32m]: if (= t "Null") ... else ...[0m
[32m+ 17617 [-]   : return "object"[0m
[32m+ 17618 [[32mT[0m/[32mT[0m[32m]: if (= t "Boolean") ... else ...[0m
[32m+ 17619 [-]   : return "boolean"[0m
[32m+ 17620 [[32mT[0m/[32mT[0m[32m]: if (= t "Number") ... else ...[0m
[32m+ 17621 [-]   : return "number"[0m
[32m+ 17622 [[32mT[0m/[32mT[0m[32m]: if (= t "String") ... else ...[0m
[32m+ 17623 [-]   : return "string"[0m
[32m+ 17624 [[32mT[0m/[32mT[0m[32m]: if (= t "Symbol") ... else ...[0m
[32m+ 17625 [-]   : return "symbol"[0m
[32m+ 17626 [[32mT[0m/[32mT[0m[32m]: if (= t "BigInt") ... else ...[0m
[32m+ 17627 [-]   : return "bigint"[0m
[32m+ 17628 [-]   : { ... }[0m
[32m+ 17629 [[32mT[0m/[32mT[0m[32m]: if (= argument["Call"] absent) ... else ...[0m
[32m+ 17630 [-]   : return "object"[0m
[32m+ 17631 [-]   : return "function"[0m

[32mAdditiveExpression1Evaluation0[0m
[32m- Inst: 85 / 85 (100.00%)[0m
[32m- Cond: 38 / 38 (100.00%)[0m
[32m+ 986   [-]   : { ... }[0m
[32m+ 987   [-]   : access __x0__ = (AdditiveExpression "Evaluation")[0m
[32m+ 988   [-]   : let lref = __x0__[0m
[32m+ 989   [-]   : app __x1__ = (GetValue lref)[0m
[32m+ 990   [[32mT[0m/[32mT[0m[32m]: if (is-completion __x1__) ... else ...[0m
[32m+ 991   [[32mT[0m/[32mT[0m[32m]: if (= __x1__["Type"] CONST_normal) ... else ...[0m
[32m+ 992   [-]   : __x1__ = __x1__["Value"][0m
[32m+ 993   [-]   : return __x1__[0m
[32m+ 994   [-]   : {}[0m
[32m+ 995   [-]   : let lval = __x1__[0m
[32m+ 996   [-]   : access __x2__ = (MultiplicativeExpression "Evaluation")[0m
[32m+ 997   [-]   : let rref = __x2__[0m
[32m+ 998   [-]   : app __x3__ = (GetValue rref)[0m
[32m+ 999   [[32mT[0m/[32mT[0m[32m]: if (is-completion __x3__) ... else ...[0m
[32m+ 1000  [[32mT[0m/[32mT[0m[32m]: if (= __x3__["Type"] CONST_normal) ... else ...[0m
[32m+ 1001  [-]   : __x3__ = __x3__["Value"][0m
[32m+ 1002  [-]   : return __x3__[0m
[32m+ 1003  [-]   : {}[0m
[32m+ 1004  [-]   : let rval = __x3__[0m
[32m+ 1005  [-]   : app __x4__ = (ToPrimitive lval)[0m
[32m+ 1006  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x4__) ... else ...[0m
[32m+ 1007  [[32mT[0m/[32mT[0m[32m]: if (= __x4__["Type"] CONST_normal) ... else ...[0m
[32m+ 1008  [-]   : __x4__ = __x4__["Value"][0m
[32m+ 1009  [-]   : return __x4__[0m
[32m+ 1010  [-]   : {}[0m
[32m+ 1011  [-]   : let lprim = __x4__[0m
[32m+ 1012  [-]   : app __x5__ = (ToPrimitive rval)[0m
[32m+ 1013  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x5__) ... else ...[0m
[32m+ 1014  [[32mT[0m/[32mT[0m[32m]: if (= __x5__["Type"] CONST_normal) ... else ...[0m
[32m+ 1015  [-]   : __x5__ = __x5__["Value"][0m
[32m+ 1016  [-]   : return __x5__[0m
[32m+ 1017  [-]   : {}[0m
[32m+ 1018  [-]   : let rprim = __x5__[0m
[32m+ 1019  [-]   : app __x6__ = (Type lprim)[0m
[32m+ 1020  [-]   : let __x7__ = (= __x6__ String)[0m
[32m+ 1021  [[32mT[0m/[32mT[0m[32m]: if __x7__ ... else ...[0m
[32m+ 1022  [-]   : {}[0m
[32m+ 1023  [-]   : { ... }[0m
[32m+ 1024  [-]   : app __x8__ = (Type rprim)[0m
[32m+ 1025  [-]   : __x7__ = (= __x8__ String)[0m
[32m+ 1026  [[32mT[0m/[32mT[0m[32m]: if __x7__ ... else ...[0m
[32m+ 1027  [-]   : { ... }[0m
[32m+ 1028  [-]   : app __x9__ = (ToString lprim)[0m
[32m+ 1029  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x9__) ... else ...[0m
[32m+ 1030  [[32mT[0m/[32mT[0m[32m]: if (= __x9__["Type"] CONST_normal) ... else ...[0m
[32m+ 1031  [-]   : __x9__ = __x9__["Value"][0m
[32m+ 1032  [-]   : return __x9__[0m
[32m+ 1033  [-]   : {}[0m
[32m+ 1034  [-]   : let lstr = __x9__[0m
[32m+ 1035  [-]   : app __x10__ = (ToString rprim)[0m
[32m+ 1036  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x10__) ... else ...[0m
[32m+ 1037  [[32mT[0m/[32mT[0m[32m]: if (= __x10__["Type"] CONST_normal) ... else ...[0m
[32m+ 1038  [-]   : __x10__ = __x10__["Value"][0m
[32m+ 1039  [-]   : return __x10__[0m
[32m+ 1040  [-]   : {}[0m
[32m+ 1041  [-]   : let rstr = __x10__[0m
[32m+ 1042  [-]   : app __x11__ = (WrapCompletion (+ lstr rstr))[0m
[32m+ 1043  [-]   : return __x11__[0m
[32m+ 1044  [-]   : {}[0m
[32m+ 1045  [-]   : app __x12__ = (ToNumeric lprim)[0m
[32m+ 1046  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x12__) ... else ...[0m
[32m+ 1047  [[32mT[0m/[32mT[0m[32m]: if (= __x12__["Type"] CONST_normal) ... else ...[0m
[32m+ 1048  [-]   : __x12__ = __x12__["Value"][0m
[32m+ 1049  [-]   : return __x12__[0m
[32m+ 1050  [-]   : {}[0m
[32m+ 1051  [-]   : let lnum = __x12__[0m
[32m+ 1052  [-]   : app __x13__ = (ToNumeric rprim)[0m
[32m+ 1053  [[32mT[0m/[32mT[0m[32m]: if (is-completion __x13__) ... else ...[0m
[32m+ 1054  [[32mT[0m/[32mT[0m[32m]: if (= __x13__["Type"] CONST_normal) ... else ...[0m
[32m+ 1055  [-]   : __x13__ = __x13__["Value"][0m
[32m+ 1056  [-]   : return __x13__[0m
[32m+ 1057  [-]   : {}[0m
[32m+ 1058  [-]   : let rnum = __x13__[0m
[32m+ 1059  [-]   : app __x14__ = (Type lnum)[0m
[32m+ 1060  [-]   : app __x15__ = (Type rnum)[0m
[32m+ 1061  [[32mT[0m/[32mT[0m[32m]: if (! (= __x14__ __x15__)) ... else ...[0m
[32m+ 1062  [-]   : { ... }[0m
[32m+ 1063  [-]   : app __x16__ = (ThrowCompletion (new OrdinaryObject("Prototype" -> INTRINSIC_TypeErrorPrototype, "ErrorData" -> undefined, "SubMap" -> (new SubMap()))))[0m
[32m+ 1064  [-]   : return __x16__[0m
[32m+ 1065  [-]   : {}[0m
[32m+ 1066  [-]   : app __x17__ = (Type lnum)[0m
[32m+ 1067  [-]   : let T = __x17__[0m
[32m+ 1068  [-]   : app __x18__ = (PRIMITIVES[T]["add"] lnum rnum)[0m
[32m+ 1069  [-]   : app __x19__ = (WrapCompletion __x18__)[0m
[32m+ 1070  [-]   : return __x19__[0m
